{"id": 394, "train_io": {"inputs": [[[0, 9, 9], [0, 9, 9], [9, 9, 9], [0, 1, 0], [0, 0, 1], [1, 1, 1]], [[9, 0, 9], [0, 9, 9], [0, 0, 9], [1, 0, 1], [1, 0, 0], [1, 0, 0]], [[0, 9, 0], [9, 0, 9], [9, 0, 0], [0, 0, 0], [0, 0, 1], [1, 0, 0]], [[0, 0, 9], [9, 9, 9], [0, 9, 0], [1, 0, 0], [0, 1, 1], [0, 0, 1]], [[0, 9, 0], [0, 9, 9], [0, 9, 9], [0, 0, 0], [1, 1, 1], [1, 0, 1]]], "outputs": [[[2, 0, 0], [2, 0, 0], [0, 0, 0]], [[0, 2, 0], [0, 0, 0], [0, 2, 0]], [[2, 0, 2], [0, 2, 0], [0, 2, 2]], [[0, 2, 0], [0, 0, 0], [2, 0, 0]], [[2, 0, 2], [0, 0, 0], [0, 0, 0]]]}, "test_io": {"inputs": [[[9, 0, 9], [0, 0, 9], [9, 0, 9], [0, 1, 1], [0, 1, 0], [1, 0, 0]]], "outputs": [[[0, 0, 0], [2, 0, 0], [0, 2, 0]]]}, "solved": true, "generalizable": true, "anpl": "import numpy as np\nfrom typing import *\n(black, blue, red, green, yellow, grey, pink, orange, teal, maroon) = range(10)\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    (m1, m2) = `The input_grid is a 6x3 matrix, divide it into 2 3x3 matrices and return`(input_grid)\n    out = `Build a 3x3 matrix of black`()\n    out = `for each pixel in out, if the corresponding pixels in m1 and m2 are both black, replace it with red`(out, m1, m2)\n    return out", "python": "import numpy as np\nfrom typing import *\nblack, blue, red, green, yellow, grey, pink, orange, teal, maroon = range(10)\n\ndef replace_black_pixels_with_red(out: np.ndarray, m1: np.ndarray, m2: np.ndarray) -> np.ndarray:\n    for i in range(3):\n        for j in range(3):\n            if m1[i][j] == black and m2[i][j] == black:\n                out[i][j] = red\n    return out\n\ndef build_black_matrix() -> np.ndarray:\n    return np.full((3, 3), black)\n\ndef divide_into_2_matrices(input_grid: np.ndarray) -> Tuple[np.ndarray, np.ndarray]:\n    m1 = input_grid[:3, :]\n    m2 = input_grid[3:, :]\n    return (m1, m2)\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    m1, m2 = divide_into_2_matrices(input_grid)\n    out = build_black_matrix()\n    out = replace_black_pixels_with_red(out, m1, m2)\n    return out"}