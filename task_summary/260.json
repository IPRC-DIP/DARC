{"id": 260, "train_io": {"inputs": [[[8, 8, 0, 0, 0], [8, 8, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], [[0, 8, 0], [0, 0, 0], [0, 0, 0]], [[0, 0, 0, 0, 0], [0, 8, 8, 8, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]], "outputs": [[[0, 0, 0, 0, 0], [2, 2, 0, 0, 0], [2, 2, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], [[0, 0, 0], [0, 2, 0], [0, 0, 0]], [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 2, 2, 2, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]]}, "test_io": {"inputs": [[[0, 0, 8, 0, 0], [0, 8, 8, 0, 0], [0, 0, 8, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]], "outputs": [[[0, 0, 0, 0, 0], [0, 0, 2, 0, 0], [0, 2, 2, 0, 0], [0, 0, 2, 0, 0], [0, 0, 0, 0, 0]]]}, "solved": true, "generalizable": true, "anpl": "def main(input_grid: np.ndarray) -> np.ndarray:\n    input_grid = \"move all non-black pixels to the next row\"(input_grid)\n    input_grid = \"make all teal pixels to red\"(input_grid)\n    return input_grid", "python": "import numpy as np\nfrom typing import *\nblack, blue, red, green, yellow, grey, pink, orange, teal, maroon = range(10)\n\ndef make_teal_pixels_red(input_grid: np.ndarray) -> np.ndarray:\n    for i in range(input_grid.shape[0]):\n        for j in range(input_grid.shape[1]):\n            if input_grid[i][j] == teal:\n                input_grid[i][j] = red\n    return input_grid\n\ndef move_non_black_pixels_to_next_row(input_grid: np.ndarray) -> np.ndarray:\n    for i in range(input_grid.shape[0] - 2, -1, -1):\n        for j in range(input_grid.shape[1]):\n            if input_grid[i][j] != black and input_grid[i + 1][j] == black:\n                input_grid[i + 1][j] = input_grid[i][j]\n                input_grid[i][j] = black\n    return input_grid\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    input_grid = move_non_black_pixels_to_next_row(input_grid)\n    input_grid = make_teal_pixels_red(input_grid)\n    return input_grid"}