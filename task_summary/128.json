{"id": 128, "train_io": {"inputs": [[[4, 4, 8], [6, 4, 3], [6, 3, 0]], [[6, 8, 9], [1, 8, 1], [9, 4, 9]], [[4, 6, 9], [6, 4, 1], [8, 8, 6]]], "outputs": [[[4, 4, 4], [4, 4, 4], [4, 4, 4]], [[9, 9, 9], [9, 9, 9], [9, 9, 9]], [[6, 6, 6], [6, 6, 6], [6, 6, 6]]]}, "test_io": {"inputs": [[[8, 8, 6], [4, 6, 9], [8, 3, 0]]], "outputs": [[[8, 8, 8], [8, 8, 8], [8, 8, 8]]]}, "solved": true, "generalizable": true, "anpl": "def main(input_grid: np.ndarray) -> np.ndarray:\n    color = \"find the most common color in the grid\"(input_grid)\n    output_grid = \"fill all blocks in the grid with the corresponding color\"(input_grid, color)\n    return output_grid", "python": "import numpy as np\nfrom typing import *\nblack, blue, red, green, yellow, grey, pink, orange, teal, maroon = range(10)\n\ndef fill_grid_with_color(input_grid: np.ndarray, color: int) -> np.ndarray:\n    \"\"\"\n    This function takes an input grid and a color and returns a new grid with all blocks filled with the given color.\n    \n    Args:\n    input_grid: A numpy array representing the input grid.\n    color: An integer representing the color to fill the grid with.\n    \n    Returns:\n    A numpy array representing the output grid with all blocks filled with the given color.\n    \"\"\"\n    output_grid = np.full_like(input_grid, color)\n    return output_grid\n\ndef find_most_common_color(input_grid: np.ndarray) -> int:\n    \"\"\"\n    This function takes an input grid and returns the most common color in the grid.\n    \n    Args:\n    input_grid: A numpy array representing the input grid.\n    \n    Returns:\n    An integer representing the most common color in the grid.\n    \"\"\"\n    colors, counts = np.unique(input_grid, return_counts=True)\n    return colors[np.argmax(counts)]\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    color = find_most_common_color(input_grid)\n    output_grid = fill_grid_with_color(input_grid, color)\n    return output_grid"}