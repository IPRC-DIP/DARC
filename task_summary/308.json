{"id": 308, "train_io": {"inputs": [[[1, 8, 8, 7, 7, 8], [1, 1, 7, 7, 1, 8], [7, 1, 1, 7, 7, 8]], [[7, 7, 7, 1], [1, 8, 1, 7], [7, 1, 1, 7]], [[1, 8, 1, 7, 1], [7, 8, 8, 1, 1], [7, 1, 8, 8, 7]]], "outputs": [[[1, 8, 8, 5, 5, 8], [1, 1, 5, 5, 1, 8], [5, 1, 1, 5, 5, 8]], [[5, 5, 5, 1], [1, 8, 1, 5], [5, 1, 1, 5]], [[1, 8, 1, 5, 1], [5, 8, 8, 1, 1], [5, 1, 8, 8, 5]]]}, "test_io": {"inputs": [[[1, 7, 7, 1, 7], [8, 1, 7, 7, 7], [8, 7, 1, 7, 8]]], "outputs": [[[1, 5, 5, 1, 5], [8, 1, 5, 5, 5], [8, 5, 1, 5, 8]]]}, "solved": true, "generalizable": true, "anpl": "import numpy as np\nfrom typing import *\n(black, blue, red, green, yellow, grey, pink, orange, teal, maroon) = range(10)\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    output = `change orange to grey in input`(input_grid)\n    return output", "python": "import numpy as np\nfrom typing import *\nblack, blue, red, green, yellow, grey, pink, orange, teal, maroon = range(10)\n\ndef change_orange_to_grey(input_grid: np.ndarray) -> np.ndarray:\n    input_grid[input_grid == orange] = grey\n    return input_grid\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    output = change_orange_to_grey(input_grid)\n    return output"}