{"id": 336, "train_io": {"inputs": [[[2, 7, 8, 8, 8], [5, 5, 6, 5, 4], [8, 5, 5, 5, 2], [8, 8, 4, 3, 6], [6, 5, 1, 9, 3]], [[3, 5, 1], [4, 5, 8], [2, 4, 9]], [[6, 5, 3], [5, 7, 5], [8, 8, 2]]], "outputs": [[[2, 7, 5, 5, 5], [8, 8, 6, 8, 4], [5, 8, 8, 8, 2], [5, 5, 4, 3, 6], [6, 8, 1, 9, 3]], [[3, 8, 1], [4, 8, 5], [2, 4, 9]], [[6, 8, 3], [8, 7, 8], [5, 5, 2]]]}, "test_io": {"inputs": [[[8, 8, 4, 5], [3, 8, 7, 5], [3, 7, 1, 9], [6, 4, 8, 8]]], "outputs": [[[5, 5, 4, 8], [3, 5, 7, 8], [3, 7, 1, 9], [6, 4, 5, 5]]]}, "solved": true, "generalizable": true, "anpl": null, "python": "import numpy as np\nfrom typing import *\nblack, blue, red, green, yellow, grey, pink, orange, teal, maroon = range(10)\n\ndef change_color(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    This function takes an n*n grid with multiple color pixels as input.\n    It traverses all pixels and changes the color of the pixel from gray to teal and from teal to gray.\n    It returns the updated grid.\n    \"\"\"\n    for i in range(input_grid.shape[0]):\n        for j in range(input_grid.shape[1]):\n            if input_grid[i][j] == grey:\n                input_grid[i][j] = teal\n            elif input_grid[i][j] == teal:\n                input_grid[i][j] = grey\n    return input_grid\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    In the input, you should see a n*n grid with multiple color pixels.\n    \"\"\"\n    ans_grid = change_color(input_grid)\n    return ans_grid"}