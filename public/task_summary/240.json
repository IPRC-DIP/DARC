{"id": 240, "train_io": {"inputs": [[[5, 0, 0], [3, 5, 0], [0, 0, 5]], [[5, 0, 0, 0], [0, 5, 0, 0], [6, 0, 5, 0], [6, 0, 4, 5]], [[5, 0, 0, 0, 0], [0, 5, 0, 0, 0], [8, 8, 5, 0, 0], [0, 2, 0, 5, 0], [0, 2, 0, 1, 5]]], "outputs": [[[5, 3, 0], [0, 5, 0], [0, 0, 5]], [[5, 0, 6, 6], [0, 5, 0, 0], [0, 0, 5, 4], [0, 0, 0, 5]], [[5, 0, 8, 0, 0], [0, 5, 8, 2, 2], [0, 0, 5, 0, 0], [0, 0, 0, 5, 1], [0, 0, 0, 0, 5]]]}, "test_io": {"inputs": [[[5, 0, 0, 0, 0, 0], [0, 5, 0, 0, 0, 0], [3, 3, 5, 0, 0, 0], [0, 0, 0, 5, 0, 0], [2, 0, 8, 8, 5, 0], [2, 0, 6, 0, 0, 5]]], "outputs": [[[5, 0, 3, 0, 2, 2], [0, 5, 3, 0, 0, 0], [0, 0, 5, 0, 8, 6], [0, 0, 0, 5, 8, 0], [0, 0, 0, 0, 5, 0], [0, 0, 0, 0, 0, 5]]]}, "solved": true, "generalizable": true, "anpl": "def main(input_grid: np.ndarray) -> np.ndarray:\n    out_grid = \"flip the input grid up and down\"(input_grid)\n    out_grid = \"rotate 90 degrees clockwise\"(out_grid)\n    return out_grid", "python": "import numpy as np\nfrom typing import *\nblack, blue, red, green, yellow, grey, pink, orange, teal, maroon = range(10)\n\ndef rotate_cw(input_grid: np.ndarray) -> np.ndarray:\n    return np.rot90(input_grid, k=-1)\n\ndef flip_ud(input_grid: np.ndarray) -> np.ndarray:\n    return np.flipud(input_grid)\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    out_grid = flip_ud(input_grid)\n    out_grid = rotate_cw(out_grid)\n    return out_grid"}