{"id": 185, "train_io": {"inputs": [[[0, 0, 0], [1, 0, 0], [0, 0, 0]], [[0, 1, 0], [1, 0, 0], [0, 0, 0]], [[0, 0, 1], [0, 0, 0], [1, 0, 0]], [[0, 1, 0], [0, 0, 1], [0, 0, 0]], [[0, 0, 1], [0, 0, 0], [0, 0, 0]], [[1, 1, 0], [0, 0, 0], [1, 0, 0]], [[0, 1, 0], [1, 1, 0], [0, 0, 0]], [[1, 1, 0], [0, 0, 0], [1, 0, 1]], [[0, 1, 0], [1, 1, 0], [1, 0, 0]], [[1, 0, 0], [0, 0, 1], [0, 1, 1]]], "outputs": [[[2, 0, 0], [0, 0, 0], [0, 0, 0]], [[2, 2, 0], [0, 0, 0], [0, 0, 0]], [[2, 2, 0], [0, 0, 0], [0, 0, 0]], [[2, 2, 0], [0, 0, 0], [0, 0, 0]], [[2, 0, 0], [0, 0, 0], [0, 0, 0]], [[2, 2, 2], [0, 0, 0], [0, 0, 0]], [[2, 2, 2], [0, 0, 0], [0, 0, 0]], [[2, 2, 2], [0, 2, 0], [0, 0, 0]], [[2, 2, 2], [0, 2, 0], [0, 0, 0]], [[2, 2, 2], [0, 2, 0], [0, 0, 0]]]}, "test_io": {"inputs": [[[0, 1, 0], [0, 0, 0], [0, 1, 0]], [[0, 1, 0], [0, 1, 1], [1, 0, 0]]], "outputs": [[[2, 2, 0], [0, 0, 0], [0, 0, 0]], [[2, 2, 2], [0, 2, 0], [0, 0, 0]]]}, "solved": true, "generalizable": true, "anpl": "def main(input_grid: np.ndarray) -> np.ndarray:\n    num_non_black = \"count the number of non_black_pixels in the input_grid\"(input_grid)\n    output_grid = np.zeros_like(input_grid)\n    if num_non_black <= 3:\n        output_grid[0, :num_non_black] = red\n    else:\n        output_grid[0, :] = red\n        output_grid[1, 1] = red\n    return output_grid", "python": "import numpy as np\nfrom typing import *\nblack, blue, red, green, yellow, grey, pink, orange, teal, maroon = range(10)\n\ndef count_non_black_pixels(input_grid: np.ndarray) -> int:\n    return np.count_nonzero(input_grid != black)\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    num_non_black = count_non_black_pixels(input_grid)\n    output_grid = np.zeros_like(input_grid)\n    if num_non_black <= 3:\n        output_grid[0, :num_non_black] = red\n    else:\n        output_grid[0, :] = red\n        output_grid[1, 1] = red\n    return output_grid"}