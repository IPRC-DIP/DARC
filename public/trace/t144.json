{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0], [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = same as input grid(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0], [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "black_blocks = find the all zero blocks in input grid seperated by red lines(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "black_blocks", "kind": "val", "val": "[(0, 0, 1, 9), (0, 11, 3, 15), (3, 0, 8, 9), (5, 11, 8, 15), (10, 0, 10, 2), (10, 4, 12, 9), (10, 11, 12, 11), (10, 13, 12, 15), (12, 0, 12, 2)]", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "(largest_blocks, smallest_blocks) = find the largest and smallest blocks in black_blocks(black_blocks)", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "largest_blocks", "kind": "val", "val": "[(3, 0, 8, 9)]", "subgraph": null}, "type": "CustomNode"}, {"id": "8", "position": {"x": 0, "y": 0}, "data": {"name": "smallest_blocks", "kind": "val", "val": "[(10, 0, 10, 2), (10, 11, 12, 11), (12, 0, 12, 2)]", "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = replace the largest blocks with color blue in output grid (output_grid, largest_blocks)", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0], [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "11", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = replace the smallest blocks with color teal in output_grid (output_grid, smallest_blocks)", "subgraph": null}, "type": "CustomNode"}, {"id": "12", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [8, 8, 8, 2, 0, 0, 0, 0, 0, 0, 2, 8, 2, 0, 0, 0], [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 8, 2, 0, 0, 0], [8, 8, 8, 2, 0, 0, 0, 0, 0, 0, 2, 8, 2, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "13", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return output_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "15", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [8, 8, 8, 2, 0, 0, 0, 0, 0, 0, 2, 8, 2, 0, 0, 0], [2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 8, 2, 0, 0, 0], [8, 8, 8, 2, 0, 0, 0, 0, 0, 0, 2, 8, 2, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e0-3", "source": "0", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e3-5", "source": "3", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e5-6", "source": "5", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e6-7", "source": "6", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e6-8", "source": "6", "target": "8", "type": "smoothstep", "animated": true}, {"id": "e7-9", "source": "7", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e2-9", "source": "2", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e9-10", "source": "9", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e10-11", "source": "10", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e8-11", "source": "8", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e11-12", "source": "11", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e12-13", "source": "12", "target": "13", "type": "smoothstep", "animated": true}, {"id": "e13-15", "source": "13", "target": "15", "type": "smoothstep", "animated": true}]}