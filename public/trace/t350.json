{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[5, 5, 2, 5, 2, 5, 5, 5, 5, 5, 5, 2, 5, 2, 5, 5], [5, 2, 2, 5, 5, 5, 2, 2, 2, 2, 5, 5, 5, 2, 2, 5], [2, 2, 5, 8, 5, 2, 2, 5, 5, 2, 2, 5, 8, 5, 2, 2], [5, 5, 8, 5, 5, 2, 5, 5, 5, 5, 2, 5, 5, 8, 5, 5], [2, 5, 5, 5, 4, 6, 6, 9, 3, 3, 3, 3, 3, 5, 5, 2], [5, 5, 2, 2, 6, 6, 9, 9, 3, 3, 3, 3, 3, 2, 5, 5], [5, 2, 2, 5, 6, 9, 6, 9, 3, 3, 3, 3, 3, 2, 2, 5], [5, 2, 5, 5, 9, 9, 9, 9, 3, 3, 3, 3, 3, 5, 2, 5], [5, 2, 5, 5, 9, 9, 9, 9, 3, 3, 3, 3, 3, 5, 2, 5], [5, 2, 2, 5, 6, 9, 6, 9, 9, 6, 9, 6, 5, 2, 2, 5], [5, 5, 2, 2, 6, 6, 9, 9, 9, 9, 6, 6, 2, 2, 5, 5], [2, 5, 5, 5, 4, 6, 6, 9, 9, 6, 6, 4, 5, 5, 5, 2], [5, 5, 8, 5, 5, 2, 5, 5, 5, 5, 2, 5, 5, 8, 5, 5], [2, 2, 5, 8, 5, 2, 2, 5, 5, 2, 2, 5, 8, 5, 2, 2], [5, 2, 2, 5, 5, 5, 2, 2, 2, 2, 5, 5, 5, 2, 2, 5], [5, 5, 2, 5, 2, 5, 5, 5, 5, 5, 5, 2, 5, 2, 5, 5]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "(r1, r2, c1, c2) = Find the smallest matrix with all green pixels in the input_grid(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "r1", "kind": "val", "val": "4", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "r2", "kind": "val", "val": "8", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "c1", "kind": "val", "val": "8", "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "c2", "kind": "val", "val": "12", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "w = Return the width of the input_grid(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "w", "kind": "val", "val": "16", "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "out = For each green pixel, denote it in line r, column c. Replace it with the color of the pixel in line w-r, column c_mirror(input_grid, w)", "subgraph": null}, "type": "CustomNode"}, {"id": "11", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[5, 5, 2, 5, 2, 5, 5, 5, 5, 5, 5, 2, 5, 2, 5, 5], [5, 2, 2, 5, 5, 5, 2, 2, 2, 2, 5, 5, 5, 2, 2, 5], [2, 2, 5, 8, 5, 2, 2, 5, 5, 2, 2, 5, 8, 5, 2, 2], [5, 5, 8, 5, 5, 2, 5, 5, 5, 5, 2, 5, 5, 8, 5, 5], [2, 5, 5, 5, 4, 6, 6, 9, 9, 6, 6, 4, 5, 5, 5, 2], [5, 5, 2, 2, 6, 6, 9, 9, 9, 9, 6, 6, 2, 2, 5, 5], [5, 2, 2, 5, 6, 9, 6, 9, 9, 6, 9, 6, 5, 2, 2, 5], [5, 2, 5, 5, 9, 9, 9, 9, 9, 9, 9, 9, 5, 5, 2, 5], [5, 2, 5, 5, 9, 9, 9, 9, 9, 9, 9, 9, 5, 5, 2, 5], [5, 2, 2, 5, 6, 9, 6, 9, 9, 6, 9, 6, 5, 2, 2, 5], [5, 5, 2, 2, 6, 6, 9, 9, 9, 9, 6, 6, 2, 2, 5, 5], [2, 5, 5, 5, 4, 6, 6, 9, 9, 6, 6, 4, 5, 5, 5, 2], [5, 5, 8, 5, 5, 2, 5, 5, 5, 5, 2, 5, 5, 8, 5, 5], [2, 2, 5, 8, 5, 2, 2, 5, 5, 2, 2, 5, 8, 5, 2, 2], [5, 2, 2, 5, 5, 5, 2, 2, 2, 2, 5, 5, 5, 2, 2, 5], [5, 5, 2, 5, 2, 5, 5, 5, 5, 5, 5, 2, 5, 2, 5, 5]], "subgraph": null}, "type": "CustomNode"}, {"id": "12", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "out = Return the matrix composed of rows from r1 to r2 and columns from c1 to c2(out, r1, r2, c1, c2)", "subgraph": null}, "type": "CustomNode"}, {"id": "13", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[9, 6, 6, 4, 5], [9, 9, 6, 6, 2], [9, 6, 9, 6, 5], [9, 9, 9, 9, 5], [9, 9, 9, 9, 5]], "subgraph": null}, "type": "CustomNode"}, {"id": "14", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return out", "subgraph": null}, "type": "CustomNode"}, {"id": "15", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[9, 6, 6, 4, 5], [9, 9, 6, 6, 2], [9, 6, 9, 6, 5], [9, 9, 9, 9, 5], [9, 9, 9, 9, 5]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e1-3", "source": "1", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e1-4", "source": "1", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e1-5", "source": "1", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e0-6", "source": "0", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e6-7", "source": "6", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e7-9", "source": "7", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e0-9", "source": "0", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e9-11", "source": "9", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e3-12", "source": "3", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e2-12", "source": "2", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e4-12", "source": "4", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e5-12", "source": "5", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e11-12", "source": "11", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e12-13", "source": "12", "target": "13", "type": "smoothstep", "animated": true}, {"id": "e13-14", "source": "13", "target": "14", "type": "smoothstep", "animated": true}, {"id": "e14-15", "source": "14", "target": "15", "type": "smoothstep", "animated": true}]}