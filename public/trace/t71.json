{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[2, 0, 2, 2, 0], [2, 0, 0, 2, 2], [2, 2, 2, 0, 0], [2, 2, 2, 2, 2], [0, 2, 2, 0, 0], [2, 2, 2, 2, 2], [4, 4, 4, 4, 4], [0, 0, 0, 2, 2], [2, 0, 0, 0, 2], [2, 2, 2, 0, 2], [0, 2, 2, 0, 0], [2, 0, 2, 2, 0], [2, 0, 2, 2, 2]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "mindex = Find a yellow line and return the index of the line(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "mindex", "kind": "val", "val": "6", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "ngrid = np.zeros((input_grid.shape[0] // 2, input_grid.shape[1]))", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "ngrid", "kind": "matrix", "val": [[0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "ans_grid = Traverse all pixels whose row number is less than mindex in inputgrid, set the pixel coordinates as (x, y), if the value of the pixel is the same as the value of (x + mindex + 1, y), then change the value of ngrid (x, y) to zero; change to green if different.Return the ngrid(input_grid, mindex, ngrid)", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "ans_grid", "kind": "matrix", "val": [[3.0, 0.0, 3.0, 0.0, 3.0], [0.0, 0.0, 0.0, 3.0, 0.0], [0.0, 0.0, 0.0, 0.0, 3.0], [3.0, 0.0, 0.0, 3.0, 3.0], [3.0, 3.0, 0.0, 3.0, 0.0], [0.0, 3.0, 0.0, 0.0, 0.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "8", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return ans_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[3.0, 0.0, 3.0, 0.0, 3.0], [0.0, 0.0, 0.0, 3.0, 0.0], [0.0, 0.0, 0.0, 0.0, 3.0], [3.0, 0.0, 0.0, 3.0, 3.0], [3.0, 3.0, 0.0, 3.0, 0.0], [0.0, 3.0, 0.0, 0.0, 0.0]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e0-3", "source": "0", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e3-4", "source": "3", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e0-5", "source": "0", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e4-5", "source": "4", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e2-5", "source": "2", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e5-7", "source": "5", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e7-8", "source": "7", "target": "8", "type": "smoothstep", "animated": true}, {"id": "e8-10", "source": "8", "target": "10", "type": "smoothstep", "animated": true}]}