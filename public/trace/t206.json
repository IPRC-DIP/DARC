{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[5, 5, 0, 5, 0], [0, 5, 0, 0, 5], [0, 0, 0, 0, 0], [5, 5, 0, 5, 5], [0, 5, 0, 0, 5]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "sub_grid_list = The input grid is 5*5, and the third row and the third column are used as the dividing line to divide the grid into four 2*2 sub-grids, and return a list of four sub-grids(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "sub_grid_list", "kind": "val", "val": "[array([[5, 5],\n       [0, 5]]), array([[5, 0],\n       [0, 5]]), array([[5, 5],\n       [0, 5]]), array([[5, 5],\n       [0, 5]])]", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "count_list = Count the number of non-black blocks in each sub-grid and return the answer list(sub_grid_list)", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "count_list", "kind": "val", "val": "[3, 2, 3, 3]", "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "ans_grid = Traversing count_list, if one of the values is different from the other three values, return the subgrid corresponding to the value(sub_grid_list, count_list)", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "ans_grid", "kind": "matrix", "val": [[5, 0], [0, 5]], "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return ans_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[5, 0], [0, 5]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e2-3", "source": "2", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e3-4", "source": "3", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e2-5", "source": "2", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e4-5", "source": "4", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e5-6", "source": "5", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e6-7", "source": "6", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e7-9", "source": "7", "target": "9", "type": "smoothstep", "animated": true}]}