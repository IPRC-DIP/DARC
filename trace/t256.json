{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[7, 7, 7, 0, 1, 0, 0, 4, 0], [0, 7, 7, 0, 1, 4, 4, 0, 4], [7, 7, 7, 7, 1, 0, 4, 0, 4], [7, 0, 0, 0, 1, 4, 0, 4, 0], [1, 1, 1, 1, 1, 1, 1, 1, 1], [0, 0, 0, 8, 1, 0, 6, 0, 6], [8, 0, 0, 8, 1, 6, 0, 0, 6], [8, 0, 8, 0, 1, 6, 6, 6, 6], [0, 8, 0, 8, 1, 0, 6, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "grids = the input is a 9*9 grid, you should separate the input into four 4*4 grids according to the 4th column and 4th row(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "grids", "kind": "val", "val": "[array([[7, 7, 7, 0],\n       [0, 7, 7, 0],\n       [7, 7, 7, 7],\n       [7, 0, 0, 0]]), array([[0, 0, 4, 0],\n       [4, 4, 0, 4],\n       [0, 4, 0, 4],\n       [4, 0, 4, 0]]), array([[0, 0, 0, 8],\n       [8, 0, 0, 8],\n       [8, 0, 8, 0],\n       [0, 8, 0, 8]]), array([[0, 6, 0, 6],\n       [6, 0, 0, 6],\n       [6, 6, 6, 6],\n       [0, 6, 0, 0]])]", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output = np.zeros((4, 4), dtype=np.int32)", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "output", "kind": "matrix", "val": [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for i in range(4):", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "i", "kind": "val", "val": "0", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output = if the position in input two is not black, color the input one according to the corresponding position in input two(output, grids[3 - i])", "subgraph": null}, "type": "CustomNode"}, {"id": "8", "position": {"x": 0, "y": 0}, "data": {"name": "output", "kind": "matrix", "val": [[0, 6, 0, 6], [6, 0, 0, 6], [6, 6, 6, 6], [0, 6, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for i in range(4):", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "i", "kind": "val", "val": "1", "subgraph": null}, "type": "CustomNode"}, {"id": "11", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output = if the position in input two is not black, color the input one according to the corresponding position in input two(output, grids[3 - i])", "subgraph": null}, "type": "CustomNode"}, {"id": "20", "position": {"x": 0, "y": 0}, "data": {"name": "output", "kind": "matrix", "val": [[7, 7, 7, 8], [4, 7, 7, 4], [7, 7, 7, 7], [7, 8, 4, 8]], "subgraph": null}, "type": "CustomNode"}, {"id": "22", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return output", "subgraph": null}, "type": "CustomNode"}, {"id": "24", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[7, 7, 7, 8], [4, 7, 7, 4], [7, 7, 7, 7], [7, 8, 4, 8]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e3-4", "source": "3", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e5-6", "source": "5", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e6-7", "source": "6", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e4-7", "source": "4", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e2-7", "source": "2", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e7-8", "source": "7", "target": "8", "type": "smoothstep", "animated": true}, {"id": "e6-9", "source": "6", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e9-10", "source": "9", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e10-11", "source": "10", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e8-11", "source": "8", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e2-11", "source": "2", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e20-22", "source": "20", "target": "22", "type": "smoothstep", "animated": true}, {"id": "e22-24", "source": "22", "target": "24", "type": "smoothstep", "animated": true}]}