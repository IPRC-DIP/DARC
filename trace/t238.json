{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[8, 8, 2, 2], [1, 8, 8, 2], [1, 3, 3, 4], [1, 1, 1, 1]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "number_of_color_types = count number of color types(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "number_of_color_types", "kind": "val", "val": "5", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "count_of_colors = count of each color and corresponding color type(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "count_of_colors", "kind": "val", "val": "{1: 6, 2: 3, 3: 2, 4: 1, 8: 4}", "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "count_of_colors = sort count from most to least(count_of_colors)", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "count_of_colors", "kind": "val", "val": "[(1, 6), (8, 4), (2, 3), (3, 2), (4, 1)]", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = make empty grid row equals to the most count of the color, col equals to the number of the colors(count_of_colors, number_of_color_types)", "subgraph": null}, "type": "CustomNode"}, {"id": "8", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = colorize_grid(output_grid, count_of_colors, number_of_color_types)", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[1, 8, 2, 3, 4], [1, 8, 2, 3, 0], [1, 8, 2, 0, 0], [1, 8, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "11", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return output_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "13", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[1, 8, 2, 3, 4], [1, 8, 2, 3, 0], [1, 8, 2, 0, 0], [1, 8, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e0-3", "source": "0", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e3-4", "source": "3", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e4-5", "source": "4", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e5-6", "source": "5", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e6-7", "source": "6", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e2-7", "source": "2", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e7-8", "source": "7", "target": "8", "type": "smoothstep", "animated": true}, {"id": "e8-9", "source": "8", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e6-9", "source": "6", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e2-9", "source": "2", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e9-10", "source": "9", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e10-11", "source": "10", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e11-13", "source": "11", "target": "13", "type": "smoothstep", "animated": true}]}