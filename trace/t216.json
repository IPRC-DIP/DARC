{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 0, 0, 0, 0, 0, 0, 0], [0, 2, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "squares = split the 9x9 grid into 9 3x3 small squares(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "squares", "kind": "val", "val": "[array([[0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0]]), array([[0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0]]), array([[0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0]]), array([[2, 0, 0],\n       [2, 2, 0],\n       [0, 2, 2]]), array([[0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0]]), array([[0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0]]), array([[0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0]]), array([[0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0]]), array([[0, 0, 0],\n       [0, 0, 0],\n       [0, 0, 0]])]", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "colorful_square = None", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "colorful_square", "kind": "val", "val": "None", "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for square in squares:", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "square", "kind": "matrix", "val": [[0, 0, 0], [0, 0, 0], [0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "13", "position": {"x": 0, "y": 0}, "data": {"name": "square", "kind": "matrix", "val": [[2, 0, 0], [2, 2, 0], [0, 2, 2]], "subgraph": null}, "type": "CustomNode"}, {"id": "15", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "colorful_square = square", "subgraph": null}, "type": "CustomNode"}, {"id": "16", "position": {"x": 0, "y": 0}, "data": {"name": "colorful_square", "kind": "matrix", "val": [[2, 0, 0], [2, 2, 0], [0, 2, 2]], "subgraph": null}, "type": "CustomNode"}, {"id": "29", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = map 3x3 grid to a 9x9 grid, if (i, j) in 3x3 grid is black, then (3*i, 3*j) in 9x9 grid is black, otherwise copy the 3x3 grid to (3*i, 3*j)(colorful_square)", "subgraph": null}, "type": "CustomNode"}, {"id": "30", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2.0, 2.0, 0.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0], [0.0, 2.0, 2.0, 0.0, 2.0, 2.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 2.0, 0.0, 0.0], [0.0, 0.0, 0.0, 2.0, 2.0, 0.0, 2.0, 2.0, 0.0], [0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 0.0, 2.0, 2.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "31", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return output_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "33", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0], [2.0, 2.0, 0.0, 2.0, 2.0, 0.0, 0.0, 0.0, 0.0], [0.0, 2.0, 2.0, 0.0, 2.0, 2.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 2.0, 0.0, 0.0], [0.0, 0.0, 0.0, 2.0, 2.0, 0.0, 2.0, 2.0, 0.0], [0.0, 0.0, 0.0, 0.0, 2.0, 2.0, 0.0, 2.0, 2.0]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e3-4", "source": "3", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e2-5", "source": "2", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e5-6", "source": "5", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e13-15", "source": "13", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e4-15", "source": "4", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e15-16", "source": "15", "target": "16", "type": "smoothstep", "animated": true}, {"id": "e16-29", "source": "16", "target": "29", "type": "smoothstep", "animated": true}, {"id": "e29-30", "source": "29", "target": "30", "type": "smoothstep", "animated": true}, {"id": "e30-31", "source": "30", "target": "31", "type": "smoothstep", "animated": true}, {"id": "e31-33", "source": "31", "target": "33", "type": "smoothstep", "animated": true}]}