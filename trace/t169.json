{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 6, 3, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 3, 3, 5, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 7, 7, 4, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 8, 1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "rows_of_small_grid = find rows that contains more than two kinds of colors(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "rows_of_small_grid", "kind": "val", "val": "[15, 16, 17, 18]", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "cols_of_small_grid = find cols that contains more than two kinds of colors(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "cols_of_small_grid", "kind": "val", "val": "[15, 16, 17, 18]", "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = np.zeros((len(rows_of_small_grid), len(cols_of_small_grid)))", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid[:, :] = input_grid[rows_of_small_grid[0]:rows_of_small_grid[-1] + 1, cols_of_small_grid[0]:cols_of_small_grid[-1] + 1]", "subgraph": null}, "type": "CustomNode"}, {"id": "8", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[4.0, 8.0, 6.0, 3.0], [9.0, 3.0, 3.0, 5.0], [6.0, 7.0, 7.0, 4.0], [1.0, 5.0, 8.0, 1.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "rows_of_large_grid = find rows have more than two same continueous colors(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "rows_of_large_grid", "kind": "val", "val": "[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]", "subgraph": null}, "type": "CustomNode"}, {"id": "11", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "cols_of_large_grid = find cols have more than two same continueous colors(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "12", "position": {"x": 0, "y": 0}, "data": {"name": "cols_of_large_grid", "kind": "val", "val": "[2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]", "subgraph": null}, "type": "CustomNode"}, {"id": "13", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "times = int(len(rows_of_large_grid) / len(rows_of_small_grid))", "subgraph": null}, "type": "CustomNode"}, {"id": "14", "position": {"x": 0, "y": 0}, "data": {"name": "times", "kind": "val", "val": "3", "subgraph": null}, "type": "CustomNode"}, {"id": "15", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "black_position = find the corresponding position of small grid where the all pixels are black in the big grid(input_grid, rows_of_small_grid, cols_of_small_grid, rows_of_large_grid, cols_of_large_grid, times)", "subgraph": null}, "type": "CustomNode"}, {"id": "16", "position": {"x": 0, "y": 0}, "data": {"name": "black_position", "kind": "val", "val": "[(0, 1), (1, 0), (1, 3), (3, 1), (3, 2)]", "subgraph": null}, "type": "CustomNode"}, {"id": "17", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid =  Change the colors to black where they are black in the larger grid(black_position, output_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "18", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[4.0, 0.0, 6.0, 3.0], [0.0, 3.0, 3.0, 0.0], [6.0, 7.0, 7.0, 4.0], [1.0, 0.0, 0.0, 1.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "19", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return output_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "21", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[4.0, 0.0, 6.0, 3.0], [0.0, 3.0, 3.0, 0.0], [6.0, 7.0, 7.0, 4.0], [1.0, 0.0, 0.0, 1.0]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e0-3", "source": "0", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e3-4", "source": "3", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e2-5", "source": "2", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e4-5", "source": "4", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e5-6", "source": "5", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e4-7", "source": "4", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e2-7", "source": "2", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e0-7", "source": "0", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e6-7", "source": "6", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e7-8", "source": "7", "target": "8", "type": "smoothstep", "animated": true}, {"id": "e0-9", "source": "0", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e9-10", "source": "9", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e0-11", "source": "0", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e11-12", "source": "11", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e2-13", "source": "2", "target": "13", "type": "smoothstep", "animated": true}, {"id": "e10-13", "source": "10", "target": "13", "type": "smoothstep", "animated": true}, {"id": "e13-14", "source": "13", "target": "14", "type": "smoothstep", "animated": true}, {"id": "e2-15", "source": "2", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e10-15", "source": "10", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e0-15", "source": "0", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e14-15", "source": "14", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e4-15", "source": "4", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e12-15", "source": "12", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e15-16", "source": "15", "target": "16", "type": "smoothstep", "animated": true}, {"id": "e16-17", "source": "16", "target": "17", "type": "smoothstep", "animated": true}, {"id": "e8-17", "source": "8", "target": "17", "type": "smoothstep", "animated": true}, {"id": "e17-18", "source": "17", "target": "18", "type": "smoothstep", "animated": true}, {"id": "e18-19", "source": "18", "target": "19", "type": "smoothstep", "animated": true}, {"id": "e19-21", "source": "19", "target": "21", "type": "smoothstep", "animated": true}]}