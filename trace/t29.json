{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 2, 2], [0, 1, 1, 0, 0, 0, 0, 2, 0, 0], [0, 1, 1, 0, 0, 0, 0, 0, 0, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 4, 4, 0, 0, 0, 0], [0, 0, 0, 0, 4, 4, 0, 0, 0, 0], [0, 0, 0, 4, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "(red_x1, red_x2, blue_x1, blue_x2, yellow_x1, yellow_x2) = Traverse the matrix from top to bottom and find the first and last row numbers where the red block appears (denoted as red_x1 and red_x2), the first and last row numbers where the blue block appears (denoted as blue_x1 and blue_x2), and the first and last row numbers where the yellow block appears (denoted as yellow_x1 and yellow_x2).(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "red_x1", "kind": "val", "val": "0", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "red_x2", "kind": "val", "val": "2", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "blue_x1", "kind": "val", "val": "2", "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "blue_x2", "kind": "val", "val": "4", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "yellow_x1", "kind": "val", "val": "5", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "yellow_x2", "kind": "val", "val": "7", "subgraph": null}, "type": "CustomNode"}, {"id": "8", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "(red_y1, red_y2, blue_y1, blue_y2, yellow_y1, yellow_y2) = Traverse the matrix from left to right and find the first and last column numbers where the red block appears (denoted as red_y1 and red_y2), the first and last column numbers where the blue block appears (denoted as blue_y1 and blue_y2), and the first and last column numbers where the yellow block appears (denoted as yellow_y1 and yellow_y2).(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "red_y1", "kind": "val", "val": "7", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "red_y2", "kind": "val", "val": "9", "subgraph": null}, "type": "CustomNode"}, {"id": "11", "position": {"x": 0, "y": 0}, "data": {"name": "blue_y1", "kind": "val", "val": "0", "subgraph": null}, "type": "CustomNode"}, {"id": "12", "position": {"x": 0, "y": 0}, "data": {"name": "blue_y2", "kind": "val", "val": "2", "subgraph": null}, "type": "CustomNode"}, {"id": "13", "position": {"x": 0, "y": 0}, "data": {"name": "yellow_y1", "kind": "val", "val": "3", "subgraph": null}, "type": "CustomNode"}, {"id": "14", "position": {"x": 0, "y": 0}, "data": {"name": "yellow_y2", "kind": "val", "val": "5", "subgraph": null}, "type": "CustomNode"}, {"id": "15", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "(red_grid, blue_grid, yellow_grid) = In the input_grid, extract the image located in the rectangle with the upper-left corner at (red_x1,red_y1) and the lower-right corner at (red_x2,red_y2) (denoted as red_grid), the image located in the rectangle with the upper-left corner at (blue_x1,blue_y1) and the lower-right corner at (blue_x2,blue_y2) (denoted as blue_grid), and the image located in the rectangle with the upper-left corner at (yellow_x1,yellow_y1) and the lower-right corner at (yellow_x2,yellow_y2) (denoted as yellow_grid).(input_grid, red_x1, red_x2, red_y1, red_y2, blue_x1, blue_x2, blue_y1, blue_y2, yellow_x1, yellow_x2, yellow_y1, yellow_y2)", "subgraph": null}, "type": "CustomNode"}, {"id": "16", "position": {"x": 0, "y": 0}, "data": {"name": "red_grid", "kind": "matrix", "val": [[0, 2, 2], [0, 2, 2], [2, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "17", "position": {"x": 0, "y": 0}, "data": {"name": "blue_grid", "kind": "matrix", "val": [[0, 1, 1], [0, 1, 1], [1, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "18", "position": {"x": 0, "y": 0}, "data": {"name": "yellow_grid", "kind": "matrix", "val": [[0, 4, 4], [0, 4, 4], [4, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "19", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = Create a new image matrix of the same size as the original image, filled with black pixels (denoted as output_grid).(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "20", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "21", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = Overlay blue_grid onto output_grid starting from the location (blue_x1,blue_y1), overlay red_grid onto output_grid starting from the location (blue_x1,red_y1), and overlay yellow_grid onto output_grid starting from the location (blue_x1,yellow_y1).(output_grid, red_grid, blue_grid, yellow_grid, blue_x1, blue_y1, red_y1, yellow_y1)", "subgraph": null}, "type": "CustomNode"}, {"id": "22", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 4, 4, 0, 0, 2, 2], [0, 1, 1, 0, 4, 4, 0, 0, 2, 2], [1, 0, 0, 4, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "23", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return output_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "25", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 1, 0, 4, 4, 0, 0, 2, 2], [0, 1, 1, 0, 4, 4, 0, 0, 2, 2], [1, 0, 0, 4, 0, 0, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e1-3", "source": "1", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e1-4", "source": "1", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e1-5", "source": "1", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e1-6", "source": "1", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e1-7", "source": "1", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e0-8", "source": "0", "target": "8", "type": "smoothstep", "animated": true}, {"id": "e8-9", "source": "8", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e8-10", "source": "8", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e8-11", "source": "8", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e8-12", "source": "8", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e8-13", "source": "8", "target": "13", "type": "smoothstep", "animated": true}, {"id": "e8-14", "source": "8", "target": "14", "type": "smoothstep", "animated": true}, {"id": "e2-15", "source": "2", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e6-15", "source": "6", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e14-15", "source": "14", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e4-15", "source": "4", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e13-15", "source": "13", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e0-15", "source": "0", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e5-15", "source": "5", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e10-15", "source": "10", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e11-15", "source": "11", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e12-15", "source": "12", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e7-15", "source": "7", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e9-15", "source": "9", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e3-15", "source": "3", "target": "15", "type": "smoothstep", "animated": true}, {"id": "e15-16", "source": "15", "target": "16", "type": "smoothstep", "animated": true}, {"id": "e15-17", "source": "15", "target": "17", "type": "smoothstep", "animated": true}, {"id": "e15-18", "source": "15", "target": "18", "type": "smoothstep", "animated": true}, {"id": "e0-19", "source": "0", "target": "19", "type": "smoothstep", "animated": true}, {"id": "e19-20", "source": "19", "target": "20", "type": "smoothstep", "animated": true}, {"id": "e4-21", "source": "4", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e17-21", "source": "17", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e13-21", "source": "13", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e16-21", "source": "16", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e18-21", "source": "18", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e11-21", "source": "11", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e9-21", "source": "9", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e20-21", "source": "20", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e21-22", "source": "21", "target": "22", "type": "smoothstep", "animated": true}, {"id": "e22-23", "source": "22", "target": "23", "type": "smoothstep", "animated": true}, {"id": "e23-25", "source": "23", "target": "25", "type": "smoothstep", "animated": true}]}