{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "(c, n) = Traverse through the first row, and when encountering the first non-black pixel, stop and record its color as c. Also, mark the current index as n (where n represents the spacing between lines).(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "c", "kind": "val", "val": "2", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "n", "kind": "val", "val": "4", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for i in range(input_grid.shape[0]):", "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "i", "kind": "val", "val": "0", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for j in range(input_grid.shape[1]):", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "j", "kind": "val", "val": "0", "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for j in range(input_grid.shape[1]):", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "j", "kind": "val", "val": "1", "subgraph": null}, "type": "CustomNode"}, {"id": "94", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for i in range(input_grid.shape[0]):", "subgraph": null}, "type": "CustomNode"}, {"id": "365", "position": {"x": 0, "y": 0}, "data": {"name": "i", "kind": "val", "val": "4", "subgraph": null}, "type": "CustomNode"}, {"id": "379", "position": {"x": 0, "y": 0}, "data": {"name": "j", "kind": "val", "val": "4", "subgraph": null}, "type": "CustomNode"}, {"id": "381", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "c_now = input_grid[i, j]", "subgraph": null}, "type": "CustomNode"}, {"id": "382", "position": {"x": 0, "y": 0}, "data": {"name": "c_now", "kind": "val", "val": "1", "subgraph": null}, "type": "CustomNode"}, {"id": "384", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "input_grid = assign the color value of the n*n area with the upper left corner at (i+1,j+1) and lower right corner at (i+n,j+n) to c_now.(input_grid, i, j, n, c_now)", "subgraph": null}, "type": "CustomNode"}, {"id": "385", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "399", "position": {"x": 0, "y": 0}, "data": {"name": "j", "kind": "val", "val": "9", "subgraph": null}, "type": "CustomNode"}, {"id": "416", "position": {"x": 0, "y": 0}, "data": {"name": "j", "kind": "val", "val": "14", "subgraph": null}, "type": "CustomNode"}, {"id": "419", "position": {"x": 0, "y": 0}, "data": {"name": "c_now", "kind": "val", "val": "4", "subgraph": null}, "type": "CustomNode"}, {"id": "421", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "input_grid = assign the color value of the n*n area with the upper left corner at (i+1,j+1) and lower right corner at (i+n,j+n) to c_now.(input_grid, i, j, n, c_now)", "subgraph": null}, "type": "CustomNode"}, {"id": "1347", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 2, 4, 4, 4, 4, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 2, 4, 4, 4, 4, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 2, 4, 4, 4, 4, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 2, 4, 4, 4, 4, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 8, 8, 8, 8, 2, 8, 8, 8, 8, 2, 8, 8, 8, 8, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 8, 8, 8, 8, 2, 8, 8, 8, 8, 2, 8, 8, 8, 8, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 8, 8, 8, 8, 2, 8, 8, 8, 8, 2, 8, 8, 8, 8, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 8, 8, 8, 8, 2, 8, 8, 8, 8, 2, 8, 8, 8, 8, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 8, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "2572", "position": {"x": 0, "y": 0}, "data": {"name": "i", "kind": "val", "val": "28", "subgraph": null}, "type": "CustomNode"}, {"id": "2658", "position": {"x": 0, "y": 0}, "data": {"name": "j", "kind": "val", "val": "28", "subgraph": null}, "type": "CustomNode"}, {"id": "2662", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for i in range(0, input_grid.shape[0] - 2 * n - 1, n + 1):", "subgraph": null}, "type": "CustomNode"}, {"id": "2663", "position": {"x": 0, "y": 0}, "data": {"name": "i", "kind": "val", "val": "0", "subgraph": null}, "type": "CustomNode"}, {"id": "2664", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for j in range(0, input_grid.shape[1] - 2 * n - 1, n + 1):", "subgraph": null}, "type": "CustomNode"}, {"id": "2665", "position": {"x": 0, "y": 0}, "data": {"name": "j", "kind": "val", "val": "0", "subgraph": null}, "type": "CustomNode"}, {"id": "2666", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "temp_grid = np.zeros((3, 3), dtype=np.int32)", "subgraph": null}, "type": "CustomNode"}, {"id": "2667", "position": {"x": 0, "y": 0}, "data": {"name": "temp_grid", "kind": "matrix", "val": [[0, 0, 0], [0, 0, 0], [0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "2668", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "temp_grid = Assign the color of pixel (i,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i,j+2n+2) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j+2n+2) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j+2n+2) to pixel (0,0) in temp_grid.(input_grid, temp_grid, i, j, n)", "subgraph": null}, "type": "CustomNode"}, {"id": "2669", "position": {"x": 0, "y": 0}, "data": {"name": "temp_grid", "kind": "matrix", "val": [[0, 0, 0], [0, 1, 0], [0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "2671", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for j in range(0, input_grid.shape[1] - 2 * n - 1, n + 1):", "subgraph": null}, "type": "CustomNode"}, {"id": "2672", "position": {"x": 0, "y": 0}, "data": {"name": "j", "kind": "val", "val": "5", "subgraph": null}, "type": "CustomNode"}, {"id": "2673", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "temp_grid = np.zeros((3, 3), dtype=np.int32)", "subgraph": null}, "type": "CustomNode"}, {"id": "2674", "position": {"x": 0, "y": 0}, "data": {"name": "temp_grid", "kind": "matrix", "val": [[0, 0, 0], [0, 0, 0], [0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "2675", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "temp_grid = Assign the color of pixel (i,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i,j+2n+2) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j+2n+2) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j+2n+2) to pixel (0,0) in temp_grid.(input_grid, temp_grid, i, j, n)", "subgraph": null}, "type": "CustomNode"}, {"id": "2676", "position": {"x": 0, "y": 0}, "data": {"name": "temp_grid", "kind": "matrix", "val": [[0, 0, 0], [1, 0, 4], [0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "2693", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "for i in range(0, input_grid.shape[0] - 2 * n - 1, n + 1):", "subgraph": null}, "type": "CustomNode"}, {"id": "2707", "position": {"x": 0, "y": 0}, "data": {"name": "temp_grid", "kind": "matrix", "val": [[1, 0, 4], [0, 0, 0], [8, 8, 8]], "subgraph": null}, "type": "CustomNode"}, {"id": "2709", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return temp_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "2711", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[1, 0, 4], [0, 0, 0], [8, 8, 8]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e1-3", "source": "1", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e0-4", "source": "0", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e4-5", "source": "4", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e0-6", "source": "0", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e6-7", "source": "6", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e0-9", "source": "0", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e7-9", "source": "7", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e9-10", "source": "9", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e5-94", "source": "5", "target": "94", "type": "smoothstep", "animated": true}, {"id": "e0-94", "source": "0", "target": "94", "type": "smoothstep", "animated": true}, {"id": "e365-381", "source": "365", "target": "381", "type": "smoothstep", "animated": true}, {"id": "e0-381", "source": "0", "target": "381", "type": "smoothstep", "animated": true}, {"id": "e379-381", "source": "379", "target": "381", "type": "smoothstep", "animated": true}, {"id": "e381-382", "source": "381", "target": "382", "type": "smoothstep", "animated": true}, {"id": "e382-384", "source": "382", "target": "384", "type": "smoothstep", "animated": true}, {"id": "e0-384", "source": "0", "target": "384", "type": "smoothstep", "animated": true}, {"id": "e365-384", "source": "365", "target": "384", "type": "smoothstep", "animated": true}, {"id": "e3-384", "source": "3", "target": "384", "type": "smoothstep", "animated": true}, {"id": "e379-384", "source": "379", "target": "384", "type": "smoothstep", "animated": true}, {"id": "e384-385", "source": "384", "target": "385", "type": "smoothstep", "animated": true}, {"id": "e419-421", "source": "419", "target": "421", "type": "smoothstep", "animated": true}, {"id": "e385-421", "source": "385", "target": "421", "type": "smoothstep", "animated": true}, {"id": "e365-421", "source": "365", "target": "421", "type": "smoothstep", "animated": true}, {"id": "e3-421", "source": "3", "target": "421", "type": "smoothstep", "animated": true}, {"id": "e416-421", "source": "416", "target": "421", "type": "smoothstep", "animated": true}, {"id": "e3-2662", "source": "3", "target": "2662", "type": "smoothstep", "animated": true}, {"id": "e2572-2662", "source": "2572", "target": "2662", "type": "smoothstep", "animated": true}, {"id": "e1347-2662", "source": "1347", "target": "2662", "type": "smoothstep", "animated": true}, {"id": "e2662-2663", "source": "2662", "target": "2663", "type": "smoothstep", "animated": true}, {"id": "e3-2664", "source": "3", "target": "2664", "type": "smoothstep", "animated": true}, {"id": "e1347-2664", "source": "1347", "target": "2664", "type": "smoothstep", "animated": true}, {"id": "e2658-2664", "source": "2658", "target": "2664", "type": "smoothstep", "animated": true}, {"id": "e2664-2665", "source": "2664", "target": "2665", "type": "smoothstep", "animated": true}, {"id": "e2666-2667", "source": "2666", "target": "2667", "type": "smoothstep", "animated": true}, {"id": "e1347-2668", "source": "1347", "target": "2668", "type": "smoothstep", "animated": true}, {"id": "e2667-2668", "source": "2667", "target": "2668", "type": "smoothstep", "animated": true}, {"id": "e3-2668", "source": "3", "target": "2668", "type": "smoothstep", "animated": true}, {"id": "e2663-2668", "source": "2663", "target": "2668", "type": "smoothstep", "animated": true}, {"id": "e2665-2668", "source": "2665", "target": "2668", "type": "smoothstep", "animated": true}, {"id": "e2668-2669", "source": "2668", "target": "2669", "type": "smoothstep", "animated": true}, {"id": "e3-2671", "source": "3", "target": "2671", "type": "smoothstep", "animated": true}, {"id": "e1347-2671", "source": "1347", "target": "2671", "type": "smoothstep", "animated": true}, {"id": "e2665-2671", "source": "2665", "target": "2671", "type": "smoothstep", "animated": true}, {"id": "e2671-2672", "source": "2671", "target": "2672", "type": "smoothstep", "animated": true}, {"id": "e2669-2673", "source": "2669", "target": "2673", "type": "smoothstep", "animated": true}, {"id": "e2673-2674", "source": "2673", "target": "2674", "type": "smoothstep", "animated": true}, {"id": "e1347-2675", "source": "1347", "target": "2675", "type": "smoothstep", "animated": true}, {"id": "e2674-2675", "source": "2674", "target": "2675", "type": "smoothstep", "animated": true}, {"id": "e3-2675", "source": "3", "target": "2675", "type": "smoothstep", "animated": true}, {"id": "e2663-2675", "source": "2663", "target": "2675", "type": "smoothstep", "animated": true}, {"id": "e2672-2675", "source": "2672", "target": "2675", "type": "smoothstep", "animated": true}, {"id": "e2675-2676", "source": "2675", "target": "2676", "type": "smoothstep", "animated": true}, {"id": "e3-2693", "source": "3", "target": "2693", "type": "smoothstep", "animated": true}, {"id": "e2663-2693", "source": "2663", "target": "2693", "type": "smoothstep", "animated": true}, {"id": "e1347-2693", "source": "1347", "target": "2693", "type": "smoothstep", "animated": true}, {"id": "e2707-2709", "source": "2707", "target": "2709", "type": "smoothstep", "animated": true}, {"id": "e2709-2711", "source": "2709", "target": "2711", "type": "smoothstep", "animated": true}]}