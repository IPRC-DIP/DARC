{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[0, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 1, 4, 4, 0, 0, 5, 5, 5, 0], [0, 1, 4, 1, 0, 0, 5, 5, 5, 0], [0, 1, 1, 1, 0, 0, 5, 5, 5, 0], [0, 0, 0, 0, 0, 0, 5, 5, 5, 0], [0, 0, 5, 5, 5, 0, 0, 0, 0, 0], [0, 0, 5, 5, 5, 0, 0, 5, 5, 5], [0, 0, 5, 5, 5, 0, 0, 5, 5, 5], [0, 0, 5, 5, 5, 0, 0, 5, 5, 5], [0, 0, 0, 0, 0, 0, 0, 5, 5, 5]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "input = input_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "input", "kind": "matrix", "val": [[0, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 1, 4, 4, 0, 0, 5, 5, 5, 0], [0, 1, 4, 1, 0, 0, 5, 5, 5, 0], [0, 1, 1, 1, 0, 0, 5, 5, 5, 0], [0, 0, 0, 0, 0, 0, 5, 5, 5, 0], [0, 0, 5, 5, 5, 0, 0, 0, 0, 0], [0, 0, 5, 5, 5, 0, 0, 5, 5, 5], [0, 0, 5, 5, 5, 0, 0, 5, 5, 5], [0, 0, 5, 5, 5, 0, 0, 5, 5, 5], [0, 0, 0, 0, 0, 0, 0, 5, 5, 5]], "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "positions = find the top left and bottom right position which is not black and grey in the input(input)", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "positions", "kind": "val", "val": "[(0, 1), (3, 3)]", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "grey_position = find the first top left position which is not black and grey in the input(input)", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "grey_position", "kind": "val", "val": "(1, 6)", "subgraph": null}, "type": "CustomNode"}, {"id": "8", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "x = positions[1][0] - positions[0][0] + 1", "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "x", "kind": "val", "val": "4", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "y = positions[1][1] - positions[0][1] + 1", "subgraph": null}, "type": "CustomNode"}, {"id": "11", "position": {"x": 0, "y": 0}, "data": {"name": "y", "kind": "val", "val": "3", "subgraph": null}, "type": "CustomNode"}, {"id": "12", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "input[grey_position[0]:grey_position[0] + x, grey_position[1]:grey_position[1] + y] = input[positions[0][0]:positions[1][0] + 1, positions[0][1]:positions[1][1] + 1]", "subgraph": null}, "type": "CustomNode"}, {"id": "14", "position": {"x": 0, "y": 0}, "data": {"name": "input", "kind": "matrix", "val": [[0, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 1, 4, 4, 0, 0, 4, 4, 4, 0], [0, 1, 4, 1, 0, 0, 1, 4, 4, 0], [0, 1, 1, 1, 0, 0, 1, 4, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 5, 5, 5, 0, 0, 0, 0, 0], [0, 0, 5, 5, 5, 0, 0, 5, 5, 5], [0, 0, 5, 5, 5, 0, 0, 5, 5, 5], [0, 0, 5, 5, 5, 0, 0, 5, 5, 5], [0, 0, 0, 0, 0, 0, 0, 5, 5, 5]], "subgraph": null}, "type": "CustomNode"}, {"id": "17", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "grey_position = find the first top left position which is not black and grey in the input(input)", "subgraph": null}, "type": "CustomNode"}, {"id": "18", "position": {"x": 0, "y": 0}, "data": {"name": "grey_position", "kind": "val", "val": "(5, 2)", "subgraph": null}, "type": "CustomNode"}, {"id": "21", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "input[grey_position[0]:grey_position[0] + x, grey_position[1]:grey_position[1] + y] = input[positions[0][0]:positions[1][0] + 1, positions[0][1]:positions[1][1] + 1]", "subgraph": null}, "type": "CustomNode"}, {"id": "23", "position": {"x": 0, "y": 0}, "data": {"name": "input", "kind": "matrix", "val": [[0, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 1, 4, 4, 0, 0, 4, 4, 4, 0], [0, 1, 4, 1, 0, 0, 1, 4, 4, 0], [0, 1, 1, 1, 0, 0, 1, 4, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 4, 4, 4, 0, 0, 0, 0, 0], [0, 0, 1, 4, 4, 0, 0, 5, 5, 5], [0, 0, 1, 4, 1, 0, 0, 5, 5, 5], [0, 0, 1, 1, 1, 0, 0, 5, 5, 5], [0, 0, 0, 0, 0, 0, 0, 5, 5, 5]], "subgraph": null}, "type": "CustomNode"}, {"id": "32", "position": {"x": 0, "y": 0}, "data": {"name": "input", "kind": "matrix", "val": [[0, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 1, 4, 4, 0, 0, 4, 4, 4, 0], [0, 1, 4, 1, 0, 0, 1, 4, 4, 0], [0, 1, 1, 1, 0, 0, 1, 4, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 4, 4, 4, 0, 0, 0, 0, 0], [0, 0, 1, 4, 4, 0, 0, 4, 4, 4], [0, 0, 1, 4, 1, 0, 0, 1, 4, 4], [0, 0, 1, 1, 1, 0, 0, 1, 4, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1]], "subgraph": null}, "type": "CustomNode"}, {"id": "35", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return input", "subgraph": null}, "type": "CustomNode"}, {"id": "37", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[0, 4, 4, 4, 0, 0, 0, 0, 0, 0], [0, 1, 4, 4, 0, 0, 4, 4, 4, 0], [0, 1, 4, 1, 0, 0, 1, 4, 4, 0], [0, 1, 1, 1, 0, 0, 1, 4, 1, 0], [0, 0, 0, 0, 0, 0, 1, 1, 1, 0], [0, 0, 4, 4, 4, 0, 0, 0, 0, 0], [0, 0, 1, 4, 4, 0, 0, 4, 4, 4], [0, 0, 1, 4, 1, 0, 0, 1, 4, 4], [0, 0, 1, 1, 1, 0, 0, 1, 4, 1], [0, 0, 0, 0, 0, 0, 0, 1, 1, 1]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e2-3", "source": "2", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e3-4", "source": "3", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e2-6", "source": "2", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e6-7", "source": "6", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e4-8", "source": "4", "target": "8", "type": "smoothstep", "animated": true}, {"id": "e8-9", "source": "8", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e4-10", "source": "4", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e10-11", "source": "10", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e11-12", "source": "11", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e2-12", "source": "2", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e9-12", "source": "9", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e7-12", "source": "7", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e4-12", "source": "4", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e12-14", "source": "12", "target": "14", "type": "smoothstep", "animated": true}, {"id": "e7-17", "source": "7", "target": "17", "type": "smoothstep", "animated": true}, {"id": "e14-17", "source": "14", "target": "17", "type": "smoothstep", "animated": true}, {"id": "e17-18", "source": "17", "target": "18", "type": "smoothstep", "animated": true}, {"id": "e11-21", "source": "11", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e14-21", "source": "14", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e9-21", "source": "9", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e18-21", "source": "18", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e4-21", "source": "4", "target": "21", "type": "smoothstep", "animated": true}, {"id": "e21-23", "source": "21", "target": "23", "type": "smoothstep", "animated": true}, {"id": "e32-35", "source": "32", "target": "35", "type": "smoothstep", "animated": true}, {"id": "e35-37", "source": "35", "target": "37", "type": "smoothstep", "animated": true}]}