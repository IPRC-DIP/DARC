{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[0, 0, 0, 0, 0, 0, 0, 0, 1, 0], [0, 0, 5, 0, 0, 0, 0, 1, 1, 1], [0, 5, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 9, 9, 0, 0, 0], [8, 0, 0, 0, 0, 0, 0, 0, 0, 0], [8, 0, 0, 2, 2, 0, 0, 0, 0, 0], [8, 0, 0, 2, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0, 0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "color_list = get all color in input grid except black(input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "color_list", "kind": "val", "val": "[1, 2, 5, 8, 9]", "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "color_num_list = count the number of Corresponding color in input_grid(input_grid, color_list)", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "color_num_list", "kind": "val", "val": "[4, 4, 4, 3, 2]", "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "color_position_list = you get a input grid and a color list. you should find the leftmost cols in input grid for every color(input_grid, color_list)", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "color_position_list", "kind": "val", "val": "[7, 3, 1, 0, 5]", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "(max_color_list, max_color_num_list) = compare the number of these colors to come up with the most numerous and equal colors(color_list, color_num_list)", "subgraph": null}, "type": "CustomNode"}, {"id": "8", "position": {"x": 0, "y": 0}, "data": {"name": "max_color_list", "kind": "val", "val": "[1, 2, 5]", "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "max_color_num_list", "kind": "val", "val": "[4, 4, 4]", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "sorted_color_list = sort the color list by the order of leftmost_position from small to big(max_color_list, color_position_list)", "subgraph": null}, "type": "CustomNode"}, {"id": "11", "position": {"x": 0, "y": 0}, "data": {"name": "sorted_color_list", "kind": "val", "val": "[5, 2, 1]", "subgraph": null}, "type": "CustomNode"}, {"id": "12", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output = paint one col per sorted_color, the number of row is the number of this color point(sorted_color_list, max_color_num_list)", "subgraph": null}, "type": "CustomNode"}, {"id": "13", "position": {"x": 0, "y": 0}, "data": {"name": "output", "kind": "matrix", "val": [[5.0, 2.0, 1.0], [5.0, 2.0, 1.0], [5.0, 2.0, 1.0], [5.0, 2.0, 1.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "14", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return output", "subgraph": null}, "type": "CustomNode"}, {"id": "16", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[5.0, 2.0, 1.0], [5.0, 2.0, 1.0], [5.0, 2.0, 1.0], [5.0, 2.0, 1.0]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e0-1", "source": "0", "target": "1", "type": "smoothstep", "animated": true}, {"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e2-3", "source": "2", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e0-3", "source": "0", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e3-4", "source": "3", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e2-5", "source": "2", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e0-5", "source": "0", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e5-6", "source": "5", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e4-7", "source": "4", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e2-7", "source": "2", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e7-8", "source": "7", "target": "8", "type": "smoothstep", "animated": true}, {"id": "e7-9", "source": "7", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e8-10", "source": "8", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e6-10", "source": "6", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e10-11", "source": "10", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e11-12", "source": "11", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e9-12", "source": "9", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e12-13", "source": "12", "target": "13", "type": "smoothstep", "animated": true}, {"id": "e13-14", "source": "13", "target": "14", "type": "smoothstep", "animated": true}, {"id": "e14-16", "source": "14", "target": "16", "type": "smoothstep", "animated": true}]}