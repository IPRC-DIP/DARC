{"nodes": [{"id": "0", "position": {"x": 0, "y": 0}, "data": {"name": "input_grid", "kind": "matrix", "val": [[6, 4, 0, 5, 0, 3, 0, 5, 0, 4, 0], [0, 0, 3, 5, 2, 8, 6, 5, 8, 0, 2], [2, 0, 8, 5, 4, 0, 0, 5, 6, 3, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [2, 0, 0, 5, 0, 3, 0, 5, 3, 6, 2], [3, 4, 6, 5, 8, 4, 2, 5, 0, 0, 4], [0, 8, 0, 5, 0, 0, 6, 5, 8, 0, 0], [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5], [0, 2, 4, 5, 0, 6, 4, 5, 0, 2, 8], [0, 6, 3, 5, 0, 0, 3, 5, 4, 0, 6], [0, 0, 0, 5, 2, 0, 8, 5, 3, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "1", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = np.zeros((9, 9))", "subgraph": null}, "type": "CustomNode"}, {"id": "2", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "3", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "remove_grey_input_grid = remove the 4-th, 8-th column and 4-th, 8-th row (input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "4", "position": {"x": 0, "y": 0}, "data": {"name": "remove_grey_input_grid", "kind": "matrix", "val": [[6, 4, 0, 0, 3, 0, 0, 4, 0], [0, 0, 3, 2, 8, 6, 8, 0, 2], [2, 0, 8, 4, 0, 0, 6, 3, 0], [2, 0, 0, 0, 3, 0, 3, 6, 2], [3, 4, 6, 8, 4, 2, 0, 0, 4], [0, 8, 0, 0, 0, 6, 8, 0, 0], [0, 2, 4, 0, 6, 4, 0, 2, 8], [0, 6, 3, 0, 0, 3, 4, 0, 6], [0, 0, 0, 2, 0, 8, 3, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "5", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "sub_blocks = seperate the input grid into 9 3x3 sub block(remove_grey_input_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "6", "position": {"x": 0, "y": 0}, "data": {"name": "sub_blocks", "kind": "val", "val": "[array([[6, 4, 0],\n       [0, 0, 3],\n       [2, 0, 8]]), array([[0, 3, 0],\n       [2, 8, 6],\n       [4, 0, 0]]), array([[0, 4, 0],\n       [8, 0, 2],\n       [6, 3, 0]]), array([[2, 0, 0],\n       [3, 4, 6],\n       [0, 8, 0]]), array([[0, 3, 0],\n       [8, 4, 2],\n       [0, 0, 6]]), array([[3, 6, 2],\n       [0, 0, 4],\n       [8, 0, 0]]), array([[0, 2, 4],\n       [0, 6, 3],\n       [0, 0, 0]]), array([[0, 6, 4],\n       [0, 0, 3],\n       [2, 0, 8]]), array([[0, 2, 8],\n       [4, 0, 6],\n       [3, 0, 0]])]", "subgraph": null}, "type": "CustomNode"}, {"id": "7", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_block = find the block contains 4 non black elements (sub_blocks)", "subgraph": null}, "type": "CustomNode"}, {"id": "8", "position": {"x": 0, "y": 0}, "data": {"name": "output_block", "kind": "matrix", "val": [[0, 2, 4], [0, 6, 3], [0, 0, 0]], "subgraph": null}, "type": "CustomNode"}, {"id": "9", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = for elements in output_block, set the i-th 3x3 block in output_grid to the color of the element(output_grid, output_block)", "subgraph": null}, "type": "CustomNode"}, {"id": "10", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0.0, 0.0, 0.0, 2.0, 2.0, 2.0, 4.0, 4.0, 4.0], [0.0, 0.0, 0.0, 2.0, 2.0, 2.0, 4.0, 4.0, 4.0], [0.0, 0.0, 0.0, 2.0, 2.0, 2.0, 4.0, 4.0, 4.0], [0.0, 0.0, 0.0, 6.0, 6.0, 6.0, 3.0, 3.0, 3.0], [0.0, 0.0, 0.0, 6.0, 6.0, 6.0, 3.0, 3.0, 3.0], [0.0, 0.0, 0.0, 6.0, 6.0, 6.0, 3.0, 3.0, 3.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "11", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "output_grid = add grey lines average 3 rows or column to make the 9x9 input grid to the 11x11 output grid(output_grid)", "subgraph": null}, "type": "CustomNode"}, {"id": "12", "position": {"x": 0, "y": 0}, "data": {"name": "output_grid", "kind": "matrix", "val": [[0.0, 0.0, 0.0, 5.0, 2.0, 2.0, 2.0, 5.0, 4.0, 4.0, 4.0], [0.0, 0.0, 0.0, 5.0, 2.0, 2.0, 2.0, 5.0, 4.0, 4.0, 4.0], [0.0, 0.0, 0.0, 5.0, 2.0, 2.0, 2.0, 5.0, 4.0, 4.0, 4.0], [5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0], [0.0, 0.0, 0.0, 5.0, 6.0, 6.0, 6.0, 5.0, 3.0, 3.0, 3.0], [0.0, 0.0, 0.0, 5.0, 6.0, 6.0, 6.0, 5.0, 3.0, 3.0, 3.0], [0.0, 0.0, 0.0, 5.0, 6.0, 6.0, 6.0, 5.0, 3.0, 3.0, 3.0], [5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0], [0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0]], "subgraph": null}, "type": "CustomNode"}, {"id": "13", "position": {"x": 0, "y": 0}, "data": {"name": "statement", "kind": "stmt", "val": "return output_grid", "subgraph": null}, "type": "CustomNode"}, {"id": "15", "position": {"x": 0, "y": 0}, "data": {"name": "out", "kind": "matrix", "val": [[0.0, 0.0, 0.0, 5.0, 2.0, 2.0, 2.0, 5.0, 4.0, 4.0, 4.0], [0.0, 0.0, 0.0, 5.0, 2.0, 2.0, 2.0, 5.0, 4.0, 4.0, 4.0], [0.0, 0.0, 0.0, 5.0, 2.0, 2.0, 2.0, 5.0, 4.0, 4.0, 4.0], [5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0], [0.0, 0.0, 0.0, 5.0, 6.0, 6.0, 6.0, 5.0, 3.0, 3.0, 3.0], [0.0, 0.0, 0.0, 5.0, 6.0, 6.0, 6.0, 5.0, 3.0, 3.0, 3.0], [0.0, 0.0, 0.0, 5.0, 6.0, 6.0, 6.0, 5.0, 3.0, 3.0, 3.0], [5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0], [0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0]], "subgraph": null}, "type": "CustomNode"}], "edges": [{"id": "e1-2", "source": "1", "target": "2", "type": "smoothstep", "animated": true}, {"id": "e0-3", "source": "0", "target": "3", "type": "smoothstep", "animated": true}, {"id": "e3-4", "source": "3", "target": "4", "type": "smoothstep", "animated": true}, {"id": "e4-5", "source": "4", "target": "5", "type": "smoothstep", "animated": true}, {"id": "e5-6", "source": "5", "target": "6", "type": "smoothstep", "animated": true}, {"id": "e6-7", "source": "6", "target": "7", "type": "smoothstep", "animated": true}, {"id": "e7-8", "source": "7", "target": "8", "type": "smoothstep", "animated": true}, {"id": "e8-9", "source": "8", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e2-9", "source": "2", "target": "9", "type": "smoothstep", "animated": true}, {"id": "e9-10", "source": "9", "target": "10", "type": "smoothstep", "animated": true}, {"id": "e10-11", "source": "10", "target": "11", "type": "smoothstep", "animated": true}, {"id": "e11-12", "source": "11", "target": "12", "type": "smoothstep", "animated": true}, {"id": "e12-13", "source": "12", "target": "13", "type": "smoothstep", "animated": true}, {"id": "e13-15", "source": "13", "target": "15", "type": "smoothstep", "animated": true}]}