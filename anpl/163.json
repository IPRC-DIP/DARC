{"funs": {"create_image_matrix": {"code": "def create_image_matrix() -> np.ndarray:\n    return np.zeros((3, 6))", "prompt": "Create a 3x6 image matrix", "subfunctions": [], "parent": "main"}, "assign_input_to_left_half": {"code": "def assign_input_to_left_half(output_grid: np.ndarray, input_grid: np.ndarray) -> np.ndarray:\n    output_grid[:, :3] = input_grid\n    return output_grid", "prompt": "Assign input_grid to the left half of output_grid", "subfunctions": [], "parent": "main"}, "flip_left_to_right": {"code": "def flip_left_to_right(input_grid: np.ndarray) -> np.ndarray:\n    return np.fliplr(input_grid)", "prompt": "Flip input_grid leftside right", "subfunctions": [], "parent": "main"}, "assign_input_to_right_half": {"code": "def assign_input_to_right_half(output_grid: np.ndarray, input_grid: np.ndarray) -> np.ndarray:\n    output_grid[:, 3:] = input_grid\n    return output_grid", "prompt": "Assign input_grid to the right half of output_grid", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    output_grid = \"Create a 3x6 image matrix\"()\n    output_grid = \"Assign input_grid to the left half of output_grid\"(output_grid, input_grid)\n    input_grid = \"Flip input_grid leftside right\"(input_grid)\n    output_grid = \"Assign input_grid to the right half of output_grid\"(output_grid, input_grid)\n    return output_grid", "prompt": null, "subfunctions": ["create_image_matrix", "assign_input_to_left_half", "flip_left_to_right", "assign_input_to_right_half"], "parent": null}}, "entry": "main"}