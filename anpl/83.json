{"funs": {"color_inverse_diagonal_red": {"code": "def color_inverse_diagonal_red(input_grid):\n    \"\"\"\n    Given a 2D grid of colors represented as integers, this function colors the inverse diagonal with red.\n\n    Args:\n    input_grid: A 2D numpy array of integers representing the colors of the grid.\n\n    Returns:\n    A 2D numpy array of integers representing the updated grid with the inverse diagonal colored red.\n    \"\"\"\n    n = input_grid.shape[0]\n    for i in range(n):\n        input_grid[i][n - i - 1] = red\n    return input_grid", "prompt": "color the inverse diagonal with red", "subfunctions": [], "parent": "main"}, "color_last_line_yellow": {"code": "def color_last_line_yellow(input_grid):\n    \"\"\"\n    Given a 2D grid of colors represented as integers, this function colors the last line with yellow.\n\n    Args:\n    input_grid: A 2D numpy array of integers representing the colors of the grid.\n\n    Returns:\n    A 2D numpy array of integers representing the updated grid with the last line colored yellow.\n    \"\"\"\n    n = input_grid.shape[0]\n    input_grid[n - 1] = yellow\n    return input_grid", "prompt": "color the last line of input with yellow", "subfunctions": [], "parent": "main"}, "color_bottom_left_green": {"code": "def color_bottom_left_green(input_grid):\n    \"\"\"\n    Given a 2D grid of colors represented as integers, this function colors the bottom left position with green.\n\n    Args:\n    input_grid: A 2D numpy array of integers representing the colors of the grid.\n\n    Returns:\n    A 2D numpy array of integers representing the updated grid with the bottom left position colored green.\n    \"\"\"\n    input_grid[-1][0] = green\n    return input_grid", "prompt": "color the bottom left position with green", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid):\n    output = \"color the inverse diagonal with red\"(input_grid)\n    output = \"color the last line of input with yellow\"(output)\n    output = \"color the bottom left position with green\"(output)\n    return output", "prompt": null, "subfunctions": ["color_inverse_diagonal_red", "color_last_line_yellow", "color_bottom_left_green"], "parent": null}}, "entry": "main"}