{"funs": {"find_min_max_green_coordinates": {"code": "def find_min_max_green_coordinates(grid: np.ndarray) -> Tuple[int, int, int, int]:\n    green_indices = np.where(grid == green)\n    xmin, xmax = (np.min(green_indices[0]), np.max(green_indices[0]))\n    ymin, ymax = (np.min(green_indices[1]), np.max(green_indices[1]))\n    return (xmin, xmax, ymin, ymax)", "prompt": " Find xmin, xmax, ymin, ymax of all green coordinates ", "subfunctions": [], "parent": "main"}, "turn_point_to_teal": {"code": "def turn_point_to_teal(grid: np.ndarray, point: Tuple[int, int]) -> np.ndarray:\n    x, y = point\n    if 0 <= x < grid.shape[0] and 0 <= y < grid.shape[1]:\n        grid[point] = teal\n    return grid", "prompt": null, "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    output_grid = np.copy(input_grid)\n    xmin, xmax, ymin, ymax = \" Find xmin, xmax, ymin, ymax of all green coordinates \"(output_grid)\n    length = int((xmax - xmin + 1) / 2)\n    for i in range(length):\n        for j in range(length):\n            if xmax + 1 + i <= input_grid.shape[0] and ymax + 1 + j <= input_grid.shape[1]:\n                output_grid = turn_point_to_teal(output_grid, (xmax + 1 + i, ymax + 1 + j))\n            if xmin - 1 - i >= 0 and ymin - 1 - j >= 0:\n                output_grid = turn_point_to_teal(output_grid, (xmin - 1 - i, ymin - 1 - j))\n    return output_grid", "prompt": null, "subfunctions": ["find_min_max_green_coordinates", "turn_point_to_teal"], "parent": null}}, "entry": "main"}