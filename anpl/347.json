{"funs": {"get_num_orange_and_y_index": {"code": "def get_num_orange_and_y_index(input_grid: np.ndarray) -> Tuple[int, int]:\n    num_orange = np.count_nonzero(input_grid == orange)\n    y_indices = np.where(input_grid == orange)[1]\n    y_index = np.mean(y_indices).astype(int)\n    return (num_orange, y_index)", "prompt": "get the the number of orange pixels and their y index in the input_grid", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    num_orange, y = \"get the the number of orange pixels and their y index in the input_grid\"(input_grid)\n    dist = 1\n    output_grid = input_grid.copy()\n    while dist < num_orange:\n        if dist % 2 == 1:\n            if y - dist >= 0:\n                output_grid[:num_orange - dist, y - dist] = teal\n            if y + dist < input_grid.shape[1]:\n                output_grid[:num_orange - dist, y + dist] = teal\n        else:\n            if y - dist >= 0:\n                output_grid[:num_orange - dist, y - dist] = orange\n            if y + dist < input_grid.shape[1]:\n                output_grid[:num_orange - dist, y + dist] = orange\n        dist += 1\n    return output_grid", "prompt": null, "subfunctions": ["get_num_orange_and_y_index"], "parent": null}}, "entry": "main"}