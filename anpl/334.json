{"funs": {"find_teal_pixel": {"code": "def find_teal_pixel(input_grid: np.ndarray) -> Tuple[int, int]:\n    for i in range(input_grid.shape[0]):\n        for j in range(input_grid.shape[1]):\n            if input_grid[i][j] == teal:\n                return (i, j)", "prompt": "There is a teal pixel, return the row and column of it", "subfunctions": [], "parent": "main"}, "find_red_pixel": {"code": "def find_red_pixel(input_grid: np.ndarray) -> Tuple[int, int]:\n    for i in range(input_grid.shape[0]):\n        for j in range(input_grid.shape[1]):\n            if input_grid[i][j] == red:\n                return (i, j)", "prompt": "There is a red pixel, return the row and column of it", "subfunctions": [], "parent": "main"}, "get_min_max": {"code": "def get_min_max(x: int, y: int) -> Tuple[int, int]:\n    return (min(x, y), max(x, y))", "prompt": "Return the smaller and larger values in sequence", "subfunctions": [], "parent": "main"}, "replace_black_pixels_with_yellow": {"code": "def replace_black_pixels_with_yellow(input_grid: np.ndarray, y1: int, y2: int, x2: int) -> np.ndarray:\n    for j in range(y1, y2 + 1):\n        if input_grid[x2][j] == black:\n            input_grid[x2][j] = yellow\n    return input_grid", "prompt": "Replace the black pixels between columns y1 and y2 in row x2 with yellow", "subfunctions": [], "parent": "main"}, "replace_black_pixels_with_yellow_in_column": {"code": "def replace_black_pixels_with_yellow_in_column(input_grid: np.ndarray, x1: int, x2: int, y1: int) -> np.ndarray:\n    for i in range(x1, x2 + 1):\n        if input_grid[i][y1] == black:\n            input_grid[i][y1] = yellow\n    return input_grid", "prompt": "Replace the black pixels between rows x1 and x2 in cloumn y1 with yellow", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    x1, y1 = \"There is a teal pixel, return the row and column of it\"(input_grid)\n    x2, y2 = \"There is a red pixel, return the row and column of it\"(input_grid)\n    a1, a2 = \"Return the smaller and larger values in sequence\"(x1, x2)\n    b1, b2 = \"Return the smaller and larger values in sequence\"(y1, y2)\n    out = \"Replace the black pixels between columns y1 and y2 in row x2 with yellow\"(input_grid, b1, b2, x2)\n    out = \"Replace the black pixels between rows x1 and x2 in cloumn y1 with yellow\"(out, a1, a2, y1)\n    return out", "prompt": null, "subfunctions": ["find_teal_pixel", "find_red_pixel", "get_min_max", "replace_black_pixels_with_yellow", "replace_black_pixels_with_yellow_in_column"], "parent": null}}, "entry": "main"}