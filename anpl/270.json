{"funs": {"find_non_black_3x3_pixels": {"code": "def find_non_black_3x3_pixels(input_grid: np.ndarray) -> List[Tuple[int, int]]:\n    locs = []\n    for i in range(input_grid.shape[0] - 2):\n        for j in range(input_grid.shape[1] - 2):\n            if np.all(input_grid[i:i + 3, j:j + 3] != black):\n                locs.append((i + 1, j + 1))\n    return locs", "prompt": "find all 3*3 pixels which is not in black and get the location", "subfunctions": [], "parent": "main"}, "count_blue_pixels": {"code": "def count_blue_pixels(input_grid: np.ndarray, locs: List[Tuple[int, int]]) -> List[int]:\n    blue_counts = []\n    for loc in locs:\n        i, j = loc\n        blue_counts.append(np.sum(input_grid[i - 1:i + 2, j - 1:j + 2] == blue))\n    return blue_counts", "prompt": "count how many pixels are in blue in each 3*3 grid, and get all the numbers", "subfunctions": [], "parent": "main"}, "find_most_blue_pixels": {"code": "def find_most_blue_pixels(input_grid: np.ndarray, locs: List[Tuple[int, int]], blue_counts: List[int]) -> Tuple[int, int]:\n    max_count = -1\n    max_loc = None\n    for i, loc in enumerate(locs):\n        if blue_counts[i] > max_count:\n            max_count = blue_counts[i]\n            max_loc = loc\n    return max_loc", "prompt": "find which 3*3 pixels has the most blue pixels", "subfunctions": [], "parent": "main"}, "find_3x3_pixels": {"code": "def find_3x3_pixels(input_grid: np.ndarray, loc: Tuple[int, int]) -> np.ndarray:\n    return input_grid[loc[0] - 1:loc[0] + 2, loc[1] - 1:loc[1] + 2]", "prompt": null, "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    locs = \"find all 3*3 pixels which is not in black and get the location\"(input_grid)\n    n = \"count how many pixels are in blue in each 3*3 grid, and get all the numbers\"(input_grid, locs)\n    loc = \"find which 3*3 pixels has the most blue pixels\"(input_grid, locs, n)\n    out_grid = find_3x3_pixels(input_grid, loc)\n    return out_grid", "prompt": null, "subfunctions": ["find_non_black_3x3_pixels", "count_blue_pixels", "find_most_blue_pixels", "find_3x3_pixels"], "parent": null}}, "entry": "main"}