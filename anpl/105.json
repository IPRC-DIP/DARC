{"funs": {"get_empty_grid": {"code": "def get_empty_grid(input_grid: np.ndarray) -> np.ndarray:\n    return np.zeros((input_grid.shape[0] * 2, input_grid.shape[1] * 2))", "prompt": "return the empty grid which is the double size of input_grid", "subfunctions": [], "parent": "main"}, "put_input_grid_at_top_left": {"code": "def put_input_grid_at_top_left(input_grid: np.ndarray, output_grid: np.ndarray) -> np.ndarray:\n    output_grid[:input_grid.shape[0], :input_grid.shape[1]] = input_grid\n    return output_grid", "prompt": "put the input_grid at the top-left of output_grid", "subfunctions": [], "parent": "main"}, "rotate_90_degrees_clockwise": {"code": "def rotate_90_degrees_clockwise(input_grid: np.ndarray) -> np.ndarray:\n    return np.rot90(input_grid, k=-1)", "prompt": "rotate the input_grid 90 degrees clockwise", "subfunctions": [], "parent": "main"}, "put_input_grid_at_top_right": {"code": "def put_input_grid_at_top_right(input_grid: np.ndarray, output_grid: np.ndarray) -> np.ndarray:\n    output_grid[:input_grid.shape[0], -input_grid.shape[1]:] = input_grid\n    return output_grid", "prompt": "put the input_grid at the top-right of output_grid", "subfunctions": [], "parent": "main"}, "put_input_grid_at_bottom_right": {"code": "def put_input_grid_at_bottom_right(input_grid: np.ndarray, output_grid: np.ndarray) -> np.ndarray:\n    output_grid[-input_grid.shape[0]:, -input_grid.shape[1]:] = input_grid\n    return output_grid", "prompt": "put the input_grid at the bottom-right of output_grid", "subfunctions": [], "parent": "main"}, "put_input_grid_at_bottom_left": {"code": "def put_input_grid_at_bottom_left(input_grid: np.ndarray, output_grid: np.ndarray) -> np.ndarray:\n    output_grid[-input_grid.shape[0]:, :input_grid.shape[1]] = input_grid\n    return output_grid", "prompt": "put the input_grid at the bottom-left of output_grid", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    output_grid = \"return the empty grid which is the double size of input_grid\"(input_grid)\n    output_grid = \"put the input_grid at the top-left of output_grid\"(input_grid, output_grid)\n    input_grid = \"rotate the input_grid 90 degrees clockwise\"(input_grid)\n    output_grid = \"put the input_grid at the top-right of output_grid\"(input_grid, output_grid)\n    input_grid = \"rotate the input_grid 90 degrees clockwise\"(input_grid)\n    output_grid = \"put the input_grid at the bottom-right of output_grid\"(input_grid, output_grid)\n    input_grid = \"rotate the input_grid 90 degrees clockwise\"(input_grid)\n    output_grid = \"put the input_grid at the bottom-left of output_grid\"(input_grid, output_grid)\n    return output_grid", "prompt": null, "subfunctions": ["get_empty_grid", "put_input_grid_at_top_left", "rotate_90_degrees_clockwise", "put_input_grid_at_top_right", "put_input_grid_at_bottom_right", "put_input_grid_at_bottom_left"], "parent": null}}, "entry": "main"}