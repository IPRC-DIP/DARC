{"funs": {"find_red_green_pixels": {"code": "def find_red_green_pixels(input_grid: np.ndarray) -> Tuple[Tuple[int, int], Tuple[int, int]]:\n    red_pixels = np.where(input_grid == red)\n    green_pixels = np.where(input_grid == green)\n    return ((red_pixels[0][0], red_pixels[1][0]), (green_pixels[0][0], green_pixels[1][0]))", "prompt": "find the index of the only one red pixel and green pixel", "subfunctions": [], "parent": "main"}, "find_pixel_same_row_as_red_and_same_column_as_green": {"code": "def find_pixel_same_row_as_red_and_same_column_as_green(red: Tuple[int, int], green: Tuple[int, int]) -> Tuple[int, int]:\n    return (red[0], green[1])", "prompt": " find the pixel in same row with the r and in same column with the g", "subfunctions": [], "parent": "main"}, "color_pixels_between_red_and_green": {"code": "def color_pixels_between_red_and_green(red: Tuple[int, int], green: Tuple[int, int], f: Tuple[int, int], input_grid: np.ndarray) -> np.ndarray:\n    input_grid[f] = teal\n    if red[1] < f[1]:\n        input_grid[red[0], red[1] + 1:f[1]] = teal\n    else:\n        input_grid[red[0], f[1] + 1:red[1]] = teal\n    if green[0] < f[0]:\n        input_grid[green[0] + 1:f[0], green[1]] = teal\n    else:\n        input_grid[f[0] + 1:green[0], green[1]] = teal\n    return input_grid", "prompt": "color f in teal, then color pixels between r and f, r and f are in same row, pixels between g and f in teal, g and f are in same column", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    r, g = \"find the index of the only one red pixel and green pixel\"(input_grid)\n    f = \" find the pixel in same row with the r and in same column with the g\"(r, g)\n    out = \"color f in teal, then color pixels between r and f, r and f are in same row, pixels between g and f in teal, g and f are in same column\"(r, g, f, input_grid)\n    return out", "prompt": null, "subfunctions": ["find_red_green_pixels", "find_pixel_same_row_as_red_and_same_column_as_green", "color_pixels_between_red_and_green"], "parent": null}}, "entry": "main"}