{"funs": {"change_grid": {"code": "def change_grid(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Traverse each column, count how many red pixels are in each column. Divide this number by 2 and denote it as cnt. Change the cnt pixels at the bottom of the column to teal. Return the changed grid.\n    \"\"\"\n    height, width = input_grid.shape\n    for j in range(width):\n        red_count = 0\n        for i in range(height):\n            if input_grid[i][j] == red:\n                red_count += 1\n        cnt = red_count // 2\n        for i in range(height - 1, height - 1 - cnt, -1):\n            input_grid[i][j] = teal\n    return input_grid", "prompt": "Traverse each column, count how many red pixels are in each column. Divide this number by 2 and denote it as cnt. Change the cnt pixels at the bottom of the column to teal. Return the changed grid", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    In the input, you should see a n*n grid with multiple color pixels.\n    \"\"\"\n    ngrid = \"Traverse each column, count how many red pixels are in each column. Divide this number by 2 and denote it as cnt. Change the cnt pixels at the bottom of the column to teal. Return the changed grid\"(input_grid)\n    return ngrid", "prompt": "In the input, you should see a n*n grid with multiple color pixels.", "subfunctions": ["change_grid"], "parent": null}}, "entry": "main"}