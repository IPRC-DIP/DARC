{"funs": {"find_first_non_black_or_grey_position": {"code": "def find_first_non_black_or_grey_position(input_grid):\n    rows, cols = input_grid.shape\n    for i in range(rows):\n        for j in range(cols):\n            if input_grid[i][j] != black and input_grid[i][j] != grey:\n                return (i, j)\n    return None", "prompt": "find the first top left position which is not black and grey in the input", "subfunctions": [], "parent": "find_positions"}, "replace_grey_area_with_non_grey_area": {"code": "def replace_grey_area_with_non_grey_area(input_grid):\n    rows, cols = input_grid.shape\n    for i in range(rows - 1, -1, -1):\n        for j in range(cols - 1, -1, -1):\n            if input_grid[i][j] != black and input_grid[i][j] != grey:\n                non_grey_position = (i, j)\n                break\n        else:\n            continue\n        break\n    return non_grey_position", "prompt": null, "subfunctions": [], "parent": "find_positions"}, "find_positions": {"code": "def find_positions(input):\n    p1 = \"find the first top left position which is not black and grey in the input\"(input)\n    p2 = replace_grey_area_with_non_grey_area(input)\n    return [p1, p2]", "prompt": null, "subfunctions": ["find_first_non_black_or_grey_position", "replace_grey_area_with_non_grey_area"], "parent": "main"}, "find_grey_position": {"code": "def find_grey_position(input_grid):\n    rows, cols = input_grid.shape\n    for i in range(rows):\n        for j in range(cols):\n            if input_grid[i][j] == grey:\n                return (i, j)\n    return None", "prompt": "find the first top left position which is not black and grey in the input", "subfunctions": [], "parent": "main"}, "has_grey_color": {"code": "def has_grey_color(input_grid):\n    rows, cols = input_grid.shape\n    for i in range(rows):\n        for j in range(cols):\n            if input_grid[i][j] == grey:\n                return True\n    return False", "prompt": "the input does not have grey color", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid):\n    input = input_grid\n    positions = find_positions(input)\n    while True:\n        grey_position = \"find the first top left position which is not black and grey in the input\"(input)\n        x = positions[1][0] - positions[0][0] + 1\n        y = positions[1][1] - positions[0][1] + 1\n        input[grey_position[0]:grey_position[0] + x, grey_position[1]:grey_position[1] + y] = input[positions[0][0]:positions[1][0] + 1, positions[0][1]:positions[1][1] + 1]\n        if not \"the input does not have grey color\"(input):\n            break\n    return input", "prompt": null, "subfunctions": ["find_positions", "find_grey_position", "has_grey_color"], "parent": null}}, "entry": "main"}