{"funs": {"find_teal_pixels": {"code": "def find_teal_pixels(input_grid: np.ndarray) -> Tuple[int, int, int, int]:\n    teal_pixels = np.where(input_grid == teal)\n    up, left = np.min(teal_pixels, axis=1)\n    down, right = np.max(teal_pixels, axis=1)\n    return (up, down, left, right)", "prompt": "find the up and down row numbers, left and right colomn numbers of teal pixels", "subfunctions": [], "parent": "main"}, "make_blue_pixels_green": {"code": "def make_blue_pixels_green(up: int, down: int, left: int, right: int, input_grid: np.ndarray) -> np.ndarray:\n    output_grid = input_grid.copy()\n    output_grid[up:down + 1, left:right + 1][output_grid[up:down + 1, left:right + 1] == blue] = green\n    return output_grid", "prompt": "make blue pixels in input grid from up to down , left to right green", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    up, down, left, right = \"find the up and down row numbers, left and right colomn numbers of teal pixels\"(input_grid)\n    output_grid = \"make blue pixels in input grid from up to down , left to right green\"(up, down, left, right, input_grid)\n    return output_grid", "prompt": null, "subfunctions": ["find_teal_pixels", "make_blue_pixels_green"], "parent": null}}, "entry": "main"}