{"funs": {"find_row_col_indices": {"code": "def find_row_col_indices(input_grid: np.ndarray) -> Tuple[int, int]:\n    \"\"\"\n    This function takes an input grid and returns the row index and column index of the first occurrence of a row with two\n    red pixels and a column with two teal pixels respectively.\n    \n    Args:\n    input_grid: A numpy array representing the input grid\n    \n    Returns:\n    A tuple containing the row index and column index of the first occurrence of a row with two red pixels and a column \n    with two teal pixels respectively.\n    \"\"\"\n    row_index = -1\n    col_index = -1\n    for j in range(input_grid.shape[1]):\n        if np.count_nonzero(input_grid[:, j] == teal) == 2:\n            col_index = j\n            break\n    for i in range(input_grid.shape[0]):\n        if np.count_nonzero(input_grid[i, :] == red) == 2:\n            row_index = i\n            break\n    return (row_index, col_index)", "prompt": "Find a column with two teal pixels and a row with two red pixels, and return  row index and column index", "subfunctions": [], "parent": "main"}, "paint_pixels": {"code": "def paint_pixels(input_grid: np.ndarray, row_index: int, col_index: int) -> np.ndarray:\n    \"\"\"\n    This function takes an input grid, a row index, and a column index and paints the specified pixels with the given colors.\n    \n    Args:\n    input_grid: A numpy array representing the input grid\n    row_index: An integer representing the row index of the pixel to be painted yellow\n    col_index: An integer representing the column index of the pixel to be painted yellow\n    \n    Returns:\n    A numpy array representing the modified input grid with the specified pixels painted red, teal, and yellow.\n    \"\"\"\n    input_grid[row_index, :] = red\n    input_grid[:, col_index] = teal\n    input_grid[row_index, col_index] = yellow\n    return input_grid", "prompt": "First paint the rowIndex row of the inputgrid red, then paint the colIndex column teal, and finally paint the (rowIndex, colIndex) pixel yellow.Return modified grid", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    In the input, you should see a n*n grid with multiple color pixels.\n    \"\"\"\n    rowIndex, colIndex = \"Find a column with two teal pixels and a row with two red pixels, and return  row index and column index\"(input_grid)\n    ans_grid = \"First paint the rowIndex row of the inputgrid red, then paint the colIndex column teal, and finally paint the (rowIndex, colIndex) pixel yellow.Return modified grid\"(input_grid, rowIndex, colIndex)\n    return ans_grid", "prompt": "In the input, you should see a n*n grid with multiple color pixels.", "subfunctions": ["find_row_col_indices", "paint_pixels"], "parent": null}}, "entry": "main"}