{"funs": {"replace_first_six_columns_with_first_column": {"code": "def replace_first_six_columns_with_first_column(inp: np.ndarray) -> np.ndarray:\n    out = inp.copy()\n    out[:, :6] = out[:, :1]\n    return out", "prompt": "Keep the input shape unchanged and replace the contents of the first six columns with the first column", "subfunctions": [], "parent": "copy_first_column"}, "copy_first_column": {"code": "def copy_first_column(inp: np.ndarray) -> np.ndarray:\n    out = \"Keep the input shape unchanged and replace the contents of the first six columns with the first column\"(inp)\n    return out", "prompt": null, "subfunctions": ["replace_first_six_columns_with_first_column"], "parent": "main"}, "replace_last_five_columns_with_last_column": {"code": "def replace_last_five_columns_with_last_column(inp: np.ndarray) -> np.ndarray:\n    out = inp.copy()\n    out[:, -5:] = out[:, -1:]\n    return out", "prompt": "Keep the input shape unchanged and replace the content of the last five columns with the last column", "subfunctions": [], "parent": "copy_first_column_to_next_four_columns"}, "copy_first_column_to_next_four_columns": {"code": "def copy_first_column_to_next_four_columns(inp: np.ndarray) -> np.ndarray:\n    out = \"Keep the input shape unchanged and replace the content of the last five columns with the last column\"(inp)\n    return out", "prompt": null, "subfunctions": ["replace_last_five_columns_with_last_column"], "parent": "main"}, "replace_non_black_color_with_gray": {"code": "def replace_non_black_color_with_gray(inp: np.ndarray) -> np.ndarray:\n    out = inp.copy()\n    non_black_mask = out[:, 5] != black\n    out[non_black_mask, 5] = grey\n    return out", "prompt": "Replace the color in the sixth column that is not black with gray", "subfunctions": [], "parent": "replace_middle_color_with_gray"}, "replace_middle_color_with_gray": {"code": "def replace_middle_color_with_gray(inp: np.ndarray) -> np.ndarray:\n    out = \"Replace the color in the sixth column that is not black with gray\"(inp)\n    return out", "prompt": null, "subfunctions": ["replace_non_black_color_with_gray"], "parent": "main"}, "main": {"code": "def main(inp: np.ndarray) -> np.ndarray:\n    out = copy_first_column(inp)\n    out = copy_first_column_to_next_four_columns(out)\n    out = replace_middle_color_with_gray(out)\n    return out", "prompt": null, "subfunctions": ["copy_first_column", "copy_first_column_to_next_four_columns", "replace_middle_color_with_gray"], "parent": null}}, "entry": "main"}