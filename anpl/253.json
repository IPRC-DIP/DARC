{"funs": {"get_column_with_highest_gray_pixels": {"code": "def get_column_with_highest_gray_pixels(input_grid: np.ndarray) -> int:\n    gray_pixels_per_column = np.sum(input_grid == grey, axis=0)\n    return np.argmax(gray_pixels_per_column)", "prompt": "Return the column with the highest gray pixels", "subfunctions": [], "parent": "main"}, "get_column_with_lowest_nonzero_gray_pixels": {"code": "def get_column_with_lowest_nonzero_gray_pixels(input_grid: np.ndarray) -> int:\n    gray_pixels_per_column = np.sum(input_grid == grey, axis=0)\n    nonzero_gray_pixels_per_column = np.where(gray_pixels_per_column > 0, gray_pixels_per_column, np.inf)\n    return np.argmin(nonzero_gray_pixels_per_column)", "prompt": "Return the column with the lowest grey pixels, and the number of grey pixels is not zero", "subfunctions": [], "parent": "main"}, "replace_grey_with_blue_in_column": {"code": "def replace_grey_with_blue_in_column(input_grid: np.ndarray, column: int) -> np.ndarray:\n    input_grid[:, column][input_grid[:, column] == grey] = blue\n    return input_grid", "prompt": "Replace grey pixels in column a with blue", "subfunctions": [], "parent": "main"}, "replace_grey_with_red_in_column": {"code": "def replace_grey_with_red_in_column(input_grid: np.ndarray, column: int) -> np.ndarray:\n    input_grid[:, column][input_grid[:, column] == grey] = red\n    return input_grid", "prompt": "Replace grey pixels in column b with red", "subfunctions": [], "parent": "main"}, "replace_grey_with_black": {"code": "def replace_grey_with_black(input_grid: np.ndarray) -> np.ndarray:\n    input_grid[input_grid == grey] = black\n    return input_grid", "prompt": "Replace grey pixels with black", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    a = \"Return the column with the highest gray pixels\"(input_grid)\n    b = \"Return the column with the lowest grey pixels, and the number of grey pixels is not zero\"(input_grid)\n    out = \"Replace grey pixels in column a with blue\"(input_grid, a)\n    out = \"Replace grey pixels in column b with red\"(out, b)\n    out = \"Replace grey pixels with black\"(out)\n    return out", "prompt": null, "subfunctions": ["get_column_with_highest_gray_pixels", "get_column_with_lowest_nonzero_gray_pixels", "replace_grey_with_blue_in_column", "replace_grey_with_red_in_column", "replace_grey_with_black"], "parent": null}}, "entry": "main"}