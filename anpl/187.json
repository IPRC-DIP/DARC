{"funs": {"split_pattern": {"code": "def split_pattern(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    The input is composed of two same pattern. Try to split the input vertically or horizontally, \n    to see if the two parts are the same. If same, return one pattern.\n    \"\"\"\n    height, width = input_grid.shape\n    if np.array_equal(input_grid[:height // 2, :], input_grid[height // 2:, :]):\n        return input_grid[:height // 2, :]\n    elif np.array_equal(input_grid[:, :width // 2], input_grid[:, width // 2:]):\n        return input_grid[:, :width // 2]\n    else:\n        return input_grid", "prompt": "the input is composed of two same pattern. Try to split the input vertically or horizontally, to see if the two parts are the same. If same, return one pattern.", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    pattern = \"the input is composed of two same pattern. Try to split the input vertically or horizontally, to see if the two parts are the same. If same, return one pattern.\"(input_grid)\n    return pattern", "prompt": null, "subfunctions": ["split_pattern"], "parent": null}}, "entry": "main"}