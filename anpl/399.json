{"funs": {"find_blue_square": {"code": "def find_blue_square(input_grid: np.ndarray) -> Tuple[int, int]:\n    \"\"\"\n    Given a 2D numpy array representing a grid of colors, this function finds the top-left coordinates of a 5x5 blue square.\n\n    Args:\n    input_grid: A 2D numpy array representing a grid of colors.\n\n    Returns:\n    A tuple of two integers representing the top-left coordinates of a 5x5 blue square.\n    \"\"\"\n    i, j = np.where(input_grid == blue)\n    return (i[0], j[0])", "prompt": "find the top-left coordinates of a 5x5 blue square", "subfunctions": [], "parent": "main"}, "rotate_grid_180": {"code": "def rotate_grid_180(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Given a 2D numpy array representing a grid of colors, this function rotates the grid 180 degrees.\n\n    Args:\n    input_grid: A 2D numpy array representing a grid of colors.\n\n    Returns:\n    A 2D numpy array representing the rotated grid.\n    \"\"\"\n    return np.rot90(np.rot90(input_grid))", "prompt": "rotate the grid 180 degrees", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    i, j = \"find the top-left coordinates of a 5x5 blue square\"(input_grid)\n    grid = \"rotate the grid 180 degrees\"(input_grid)\n    return grid[i:i + 5, j:j + 5]", "prompt": null, "subfunctions": ["find_blue_square", "rotate_grid_180"], "parent": null}}, "entry": "main"}