{"funs": {"find_diagonal_colors": {"code": "def find_diagonal_colors(input_grid: np.ndarray) -> List[int]:\n    diagonal_colors = []\n    for i in range(len(input_grid)):\n        diagonal_colors.append(input_grid[i][i])\n    return diagonal_colors", "prompt": " find the color of each squares on the diagonal and record it with a list ", "subfunctions": [], "parent": "main"}, "change_row_color": {"code": "def change_row_color(grid: np.ndarray, row_index: int, color: int) -> np.ndarray:\n    grid[row_index] = color\n    return grid", "prompt": " Change all the squares in the i-th row to the color corresponding to the i-th element in the list ", "subfunctions": [], "parent": "main"}, "change_column_color": {"code": "def change_column_color(grid: np.ndarray, column_index: int, color: int) -> np.ndarray:\n    grid[:, column_index] = color\n    return grid", "prompt": " Change all the squares in the i-th column to the color corresponding to the i-th element in the list ", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    list = \" find the color of each squares on the diagonal and record it with a list \"(input_grid)\n    list += list\n    num = len(list)\n    output_grid = np.zeros((num, num), dtype=int)\n    for i in range(num):\n        output_grid = \" Change all the squares in the i-th row to the color corresponding to the i-th element in the list \"(output_grid, i, list[i])\n        output_grid = \" Change all the squares in the i-th column to the color corresponding to the i-th element in the list \"(output_grid, i, list[i])\n    return output_grid", "prompt": null, "subfunctions": ["find_diagonal_colors", "change_row_color", "change_column_color"], "parent": null}}, "entry": "main"}