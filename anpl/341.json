{"funs": {"find_non_black_teal": {"code": "def find_non_black_teal(input_grid: np.ndarray) -> List[Tuple[int, int]]:\n    non_black_teal = []\n    for i in range(input_grid.shape[0]):\n        for j in range(input_grid.shape[1]):\n            if input_grid[i][j] != black and input_grid[i][j] != teal:\n                non_black_teal.append((i, j))\n    return non_black_teal", "prompt": "find positions of non-black, non-teal pixels", "subfunctions": [], "parent": "main"}, "make_nearest_teal_same_color": {"code": "def make_nearest_teal_same_color(input_grid: np.ndarray, color_point: Tuple[int, int]) -> np.ndarray:\n    i, j = color_point\n    if input_grid[i][j] == teal:\n        return input_grid\n    min_dist = float('inf')\n    nearest_teal = None\n    for x in range(input_grid.shape[0]):\n        for y in range(input_grid.shape[1]):\n            if input_grid[x][y] == teal:\n                dist = (x - i) ** 2 + (y - j) ** 2\n                if dist < min_dist:\n                    min_dist = dist\n                    nearest_teal = (x, y)\n    if nearest_teal is not None:\n        input_grid[nearest_teal[0]][nearest_teal[1]] = input_grid[i][j]\n    return input_grid", "prompt": "make the nearest teal pixel to the color_point to be the same color", "subfunctions": [], "parent": "main"}, "make_non_black_teal_black": {"code": "def make_non_black_teal_black(input_grid: np.ndarray, non_black_teal: List[Tuple[int, int]]) -> np.ndarray:\n    for i, j in non_black_teal:\n        if input_grid[i][j] != black and input_grid[i][j] != teal:\n            input_grid[i][j] = black\n    return input_grid", "prompt": "make the non_black_teal in input_grid to be black", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    non_black_teal = \"find positions of non-black, non-teal pixels\"(input_grid)\n    for color_point in non_black_teal:\n        input_grid = \"make the nearest teal pixel to the color_point to be the same color\"(input_grid, color_point)\n    input_grid = \"make the non_black_teal in input_grid to be black\"(input_grid, non_black_teal)\n    return input_grid", "prompt": null, "subfunctions": ["find_non_black_teal", "make_nearest_teal_same_color", "make_non_black_teal_black"], "parent": null}}, "entry": "main"}