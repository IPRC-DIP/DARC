{"funs": {"create_new_grid": {"code": "def create_new_grid(input_grid: np.ndarray) -> np.ndarray:\n    return np.zeros_like(input_grid)", "prompt": "sme size as input grid", "subfunctions": [], "parent": "main"}, "replace_black_with_yellow": {"code": "def replace_black_with_yellow(arr: np.ndarray) -> np.ndarray:\n    for i in range(5, len(arr), 12):\n        arr[i:i + 3] = yellow\n    return arr", "prompt": "replace the black elements with yellow in 6-th to 8-th, 18-th to 20-th and so on, input is a one-dimensional array", "subfunctions": [], "parent": "main"}, "replace_black_with_yellow_in_avg_six": {"code": "def replace_black_with_yellow_in_avg_six(arr: np.ndarray) -> np.ndarray:\n    for i in range(0, len(arr), 6):\n        arr[i:i + 1] = yellow\n    return arr", "prompt": "repalce  the black element with yellow in average 6 element from position 0, such as elements in position 0, 6 and so on.", "subfunctions": [], "parent": "main"}, "replace_black_with_yellow_in_first_two": {"code": "def replace_black_with_yellow_in_first_two(arr: np.ndarray) -> np.ndarray:\n    for i in range(0, 2):\n        if arr[i] == black:\n            arr[i] = yellow\n    return arr", "prompt": "replace the the black elements with yellow in position 0 and 1", "subfunctions": [], "parent": "replace_black_with_yellow_in_last_three"}, "replace_last_three_black_with_yellow": {"code": "def replace_last_three_black_with_yellow(arr: np.ndarray) -> np.ndarray:\n    for i in range(2, len(arr), 12):\n        arr[i + 9:i + 12] = yellow\n    return arr", "prompt": "from position 2,  for every 12 interval position , you need to replace the last 3 black elements with yellow. pay attention to that it is the last of the 12 not the first 3", "subfunctions": [], "parent": "replace_black_with_yellow_in_last_three"}, "replace_black_with_yellow_in_last_three": {"code": "def replace_black_with_yellow_in_last_three(arr: np.ndarray) -> np.ndarray:\n    output_grid = \"replace the the black elements with yellow in position 0 and 1\"(arr)\n    output_grid = \"from position 2,  for every 12 interval position , you need to replace the last 3 black elements with yellow. pay attention to that it is the last of the 12 not the first 3\"(output_grid)\n    return output_grid", "prompt": null, "subfunctions": ["replace_black_with_yellow_in_first_two", "replace_last_three_black_with_yellow"], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    output_grid = \"sme size as input grid\"(input_grid)\n    output_grid[0] = \"replace the black elements with yellow in 6-th to 8-th, 18-th to 20-th and so on, input is a one-dimensional array\"(input_grid[0])\n    output_grid[1] = \"repalce  the black element with yellow in average 6 element from position 0, such as elements in position 0, 6 and so on.\"(input_grid[1])\n    output_grid[2] = replace_black_with_yellow_in_last_three(input_grid[2])\n    return output_grid", "prompt": null, "subfunctions": ["create_new_grid", "replace_black_with_yellow", "replace_black_with_yellow_in_avg_six", "replace_black_with_yellow_in_last_three"], "parent": null}}, "entry": "main"}