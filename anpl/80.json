{"funs": {"modify_grid": {"code": "def modify_grid(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Traversing all 2*2 sub-grids in the inputgrid, if there are three teal\n    pixels and one black pixel in a 2*2 sub-grid, paint the black pixel blue.\n    Return the modified grid.\n    \"\"\"\n    for i in range(input_grid.shape[0] - 1):\n        for j in range(input_grid.shape[1] - 1):\n            sub_grid = input_grid[i:i + 2, j:j + 2]\n            if np.sum(sub_grid == teal) == 3 and np.sum(sub_grid == black) == 1:\n                input_grid[i + np.where(sub_grid == black)[0][0], j + np.where(sub_grid == black)[1][0]] = blue\n    return input_grid", "prompt": "Traversing all 2*2 sub-grids in the inputgrid, if there are three tealpixels and one blackpixel in a 2*2 sub-grid, paint the black pixel blue. Return the modified grid", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    In the input, you should see a n*n grid with multiple color pixels.\n    \"\"\"\n    ans_grid = \"Traversing all 2*2 sub-grids in the inputgrid, if there are three tealpixels and one blackpixel in a 2*2 sub-grid, paint the black pixel blue. Return the modified grid\"(input_grid)\n    return ans_grid", "prompt": "In the input, you should see a n*n grid with multiple color pixels.", "subfunctions": ["modify_grid"], "parent": null}}, "entry": "main"}