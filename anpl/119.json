{"funs": {"color_non_black_cells": {"code": "def color_non_black_cells(input_grid):\n    \"\"\"\n    Traverse every position of input. For every position which is not black, if all of the four connected positions of it are not black, change the position to teal.\n    \"\"\"\n    rows, cols = input_grid.shape\n    output_grid = np.copy(input_grid)\n    for i in range(rows):\n        for j in range(cols):\n            if input_grid[i][j] != black:\n                if i > 0 and j > 0 and (i < rows - 1) and (j < cols - 1):\n                    if input_grid[i - 1][j] != black and input_grid[i + 1][j] != black and (input_grid[i][j - 1] != black) and (input_grid[i][j + 1] != black):\n                        output_grid[i][j] = teal\n    return output_grid", "prompt": "traverse every position of input. for every position which is not black, if all of the four connected positions of it are not black, change the position to teal", "subfunctions": [], "parent": "main"}, "main": {"code": "def main(input_grid):\n    output = \"traverse every position of input. for every position which is not black, if all of the four connected positions of it are not black, change the position to teal\"(input_grid)\n    return output", "prompt": null, "subfunctions": ["color_non_black_cells"], "parent": null}}, "entry": "main"}